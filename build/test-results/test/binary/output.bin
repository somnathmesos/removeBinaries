 INFO  2018-03-26 10:47:45,595 [Test worker] com.mesosphere.sdk.specification.yaml.RawServiceSpec$Builder:build(70): Rendered ServiceSpec from /fw-wrkspc/metricsfix/removeBinaries/src/main/dist/svc.yml:
Missing template values: []
name: nifi
scheduler:
  principal: 
  zookeeper: master.mesos:2181
  user: nobody
pods:
  nifi:
    count: 2
*    placement: '[["hostname", "UNIQUE"]]'
    rlimits:
      RLIMIT_NOFILE:
        soft: 50000
        hard: 50000
      RLIMIT_NPROC:
        soft: 10000
        hard: 10000
    resource-sets:
      node-resources:
        cpus: 1
        memory: 4096
        ports:
          web:
            port: 0
            env-key: PORT_WEB
            advertise: true
            vip:
              prefix: web
              port: 8080
          node:
           port: 0
           env-key: PORT_WEB
           advertise: true
        volumes:
          database-repository:
&            path: database-repository
            type: ROOT
            size: 1000
          flowfile-repository:
&            path: flowfile-repository
            type: ROOT
            size: 1000
!          provenance-repository:
(            path: provenance-repository
            type: ROOT
            size: 1000
          content-repository:
%            path: content-repository
            type: ROOT
            size: 1000
          misc-repository:
"            path: misc-repository
            type: ROOT
            size: 1000
      sidecar-resources:
        cpus: 0.5
        memory: 512
        volume:
          path: nifi-backup
          type: ROOT
          size: 500
       sidecar-cleanupresources:
        cpus: 0.5
        memory: 512

    uris:
!      - https://test-url/jre.tgz
T      - http://downloads.mesosphere.com/dcos-commons/artifacts/0.40.2/bootstrap.zip
M      - https://s3-us-west-1.amazonaws.com/nifi-binary/nifi-1.5.0-bin.tar.gz
S      - http://downloads.mesosphere.com/dcos-commons/artifacts/0.40.2/executor.zip
[      - https://s3-ap-southeast-2.amazonaws.com/nifi-toolkit/nifi-toolkit-1.5.0-bin.tar.gz
S      - https://s3-ap-southeast-2.amazonaws.com/nifi-toolkit/dcos-nifi-janitor.jar
R      - https://s3-ap-southeast-2.amazonaws.com/nifi-toolkit/dcos-nifi-statsd.jar
L      - https://s3-us-west-1.amazonaws.com/nifi-python/python-2.7.14.tar.gz
-      - https://test-url/libmesos-bundle.tgz
    tasks:
      metrics:
        goal: RUNNING
        essential: false
        cmd: |
            ./bootstrap
ê            export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/jre*/) && export JAVA_HOME=${JAVA_HOME%/} && export PATH=$(ls -d $JAVA_HOME/bin):$PATH
)            echo "Before running statsd"
z            java -jar dcos-nifi-statsd.jar ../../misc-repository/url-info.properties $STATSD_UDP_HOST $STATSD_UDP_PORT 20
(            echo "After running statsd"
        cpus: 0.2
        memory: 32
      node:
%        resource-set: node-resources
        goal: RUNNING
        cmd: |
            ./bootstrap 
ê            export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/jre*/) && export JAVA_HOME=${JAVA_HOME%/} && export PATH=$(ls -d $JAVA_HOME/bin):$PATH
A            echo "INSTALL" > misc-repository/readiness-info.txt 
3            ./nifi-${NIFI_VERSION}/bin/nifi.sh run
        configs:
          nifi.properties:
1            template: server.properties.mustache
2            dest: nifi-1.5.0/conf/nifi.properties
        readiness-check:
            cmd: |
C              # The Nifi node has started when it logs a specific 
\              # "${TASK_NAME}.${FRAMEWORK_HOST}:$nifi_web_port is now connected" log line. 
%              # An example is below:
k              # 2018/03/05 11:11:37 nifi-0-node.nifi.autoip.dcos.thisdcos.directory:1025 is now connected.
K              nifi_server_log_files=nifi-${NIFI_VERSION}/logs/nifi-app.log
<              nifi_host_name=${TASK_NAME}.${FRAMEWORK_HOST}
-              nifi_host_name_local=localhost
(              nifi_web_port=${PORT_WEB}
F              readiness_info=`cat misc-repository/readiness-info.txt`
-              echo "Executing shell script."
%              echo "$readiness_info"
;              if [ "$readiness_info" == "INSTALL" ] ; then
S                echo "Checking for successful log line in $nifi_server_log_files."
Ñ                echo "Looking for \"$nifi_host_name:$nifi_web_port is now connected or NiFi has started.\" in the server log file."
t                grep -q "$nifi_host_name:$nifi_web_port is now connected\|NiFi has started." $nifi_server_log_files
'                if [ $? -eq 0 ] ; then
1                  echo "Found started log line."
D                  echo "READY" > misc-repository/readiness-info.txt
Z                  echo "HOST=$nifi_host_name_local" > misc-repository/url-info.properties
T                  echo "PORT=$nifi_web_port" >> misc-repository/url-info.properties
                else
>                  echo "started log line not found. Exiting."
                  exit 1
                fi
?                echo "Required log line found. Nifi is ready."
9              elif [ $readiness_info == "READY" ] ; then
&                echo "Nifi is ready."
;              elif [ $readiness_info == "RUNNING" ] ; then
(                echo "Nifi is running."
              fi
              exit 0
            interval: 5
            delay: 10
            timeout: 120
        env:
          NODE_CPUS: 1
          NODE_MEM: 4096
          NIFI_VERSION: 1.5.0
      restart-cleanup:
        goal: ONCE
        cmd: |
E         # Clean Nifi Application i.e. remove all disconnected node.
.         misc_repo_path=../../misc-repository
O         echo "Executing Janitor program to clean the Nifi disconnected node."
ç         export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/jre*/) && export JAVA_HOME=${JAVA_HOME%/} && export PATH=$(ls -d $JAVA_HOME/bin):$PATH
p         java -jar dcos-nifi-janitor.jar $misc_repo_path/readiness-info.txt $misc_repo_path/url-info.properties
/        resource-set: sidecar-cleanupresources
      backup:
        goal: ONCE
        cmd: >
E                export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/jre*) ;
∏                sh $MESOS_SANDBOX/nifi-toolkit-${NIFI_VERSION}/bin/file-manager.sh -o backup -b nifi-backup -c $MESOS_SANDBOX/../../tasks/nifi-$POD_INSTANCE_INDEX-node*/nifi-1.5.0 -v;
(        resource-set: sidecar-resources
      upload-s3:
        goal: ONCE
        cmd: >
C                export PATH=$MESOS_SANDBOX/python-dist/bin:$PATH ;
e                aws s3 cp nifi-backup s3://${S3_BUCKET_NAME}/nifi-${POD_INSTANCE_INDEX}/ --recursive
(        resource-set: sidecar-resources
      cleanup-backup:
        goal: ONCE
        cmd: >
E                export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/jre/) ;
$                rm -r nifi-backup/*
(        resource-set: sidecar-resources
plans:

  deploy:
    strategy: serial
    phases:
      node:
        strategy: serial
        pod: nifi
        steps:
(          - default: [[node],[metrics]]
  replace:
    strategy: serial
    phases:
      node:
        strategy: serial
        pod: nifi
        steps:
(          - default: [[node],[metrics]]
      cleanup:
        strategy: serial
        pod: nifi
        steps:
)          - default: [[restart-cleanup]]
  backup-s3:
    strategy: serial
    phases:
      backup:
        strategy: serial
        pod: nifi
        steps:
           - default: [[backup]]
      upload-backups:
        strategy: serial
        pod: nifi
        steps:
#          - default: [[upload-s3]]
      cleanup-backups:
        strategy: serial
        pod: nifi
        steps:
(          - default: [[cleanup-backup]]

íINFO  2018-03-26 10:47:46,068 [Test worker] org.hibernate.validator.internal.util.Version:<clinit>(30): HV000001: Hibernate Validator 5.3.2.Final
çINFO  2018-03-26 10:47:47,837 [Test worker] com.mesosphere.sdk.offer.evaluate.placement.MarathonConstraintParser:parseRow(106): Marathon-style row '[hostname, UNIQUE]' resulted in placement rule: 'MaxPerHostnameRule{max=1, task-filter=RegexMatcher{pattern='nifi-.*'}}'
ÀINFO  2018-03-26 10:47:49,156 [Test worker] com.mesosphere.sdk.scheduler.SchedulerBuilder:getDefaultScheduler(265): Unable to retrieve last configuration. Assuming that no prior deployment has completed
ìINFO  2018-03-26 10:47:49,396 [Test worker] com.mesosphere.sdk.scheduler.SchedulerBuilder:updateConfig(472): Updating config with 10 validators...
ìINFO  2018-03-26 10:47:49,420 [Test worker] com.mesosphere.sdk.config.DefaultConfigurationUpdater:updateConfiguration(78): New prospective config:
{
  "name" : "nifi",
  "role" : "nifi-role",
"  "principal" : "nifi-principal",
  "web-url" : null,
%  "zookeeper" : "master.mesos:2181",
  "pod-specs" : [ {
    "type" : "nifi",
    "user" : "nobody",
    "count" : 2,
    "image" : null,
    "networks" : [ ],
    "rlimits" : [ {
       "name" : "RLIMIT_NOFILE",
      "soft" : 50000,
      "hard" : 50000
	    }, {
      "name" : "RLIMIT_NPROC",
      "soft" : 10000,
      "hard" : 10000
	    } ],
á    "uris" : [ "https://test-url/jre.tgz", "http://downloads.mesosphere.com/dcos-commons/artifacts/0.40.2/bootstrap.zip", "https://s3-us-west-1.amazonaws.com/nifi-binary/nifi-1.5.0-bin.tar.gz", "http://downloads.mesosphere.com/dcos-commons/artifacts/0.40.2/executor.zip", "https://s3-ap-southeast-2.amazonaws.com/nifi-toolkit/nifi-toolkit-1.5.0-bin.tar.gz", "https://s3-ap-southeast-2.amazonaws.com/nifi-toolkit/dcos-nifi-janitor.jar", "https://s3-ap-southeast-2.amazonaws.com/nifi-toolkit/dcos-nifi-statsd.jar", "https://s3-us-west-1.amazonaws.com/nifi-python/python-2.7.14.tar.gz", "https://test-url/libmesos-bundle.tgz", "test-executor-uri" ],
    "task-specs" : [ {
      "name" : "metrics",
      "goal" : "RUNNING",
      "essential" : false,
      "resource-set" : {
'        "id" : "metrics-resource-set",
(        "resource-specifications" : [ {
+          "@type" : "DefaultResourceSpec",
          "name" : "cpus",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 0.2
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        }, {
+          "@type" : "DefaultResourceSpec",
          "name" : "mem",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 32.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        } ],
'        "volume-specifications" : [ ],
        "role" : "nifi-role",
'        "principal" : "nifi-principal"
	      },
      "command-spec" : {
÷        "value" : "./bootstrap\nexport JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/jre*/) && export JAVA_HOME=${JAVA_HOME%/} && export PATH=$(ls -d $JAVA_HOME/bin):$PATH\necho \"Before running statsd\"\njava -jar dcos-nifi-statsd.jar ../../misc-repository/url-info.properties $STATSD_UDP_HOST $STATSD_UDP_PORT 20\necho \"After running statsd\"\n",
        "environment" : {
-          "NIFI_CLUSTER_FIREWALL_FILE" : "",
=          "NIFI_CLUSTER_FLOW_ELECTION_MAX_CANDIDATES" : "3",
A          "NIFI_CLUSTER_FLOW_ELECTION_MAX_WAIT_TIME" : "1 mins",
+          "NIFI_CLUSTER_IS_NODE" : "true",
,          "NIFI_CLUSTER_NODE_ADDRESS" : "",
=          "NIFI_CLUSTER_NODE_CONNECTION_TIMEOUT" : "5 secs",
9          "NIFI_CLUSTER_NODE_EVENT_HISTORY_SIZE" : "25",
7          "NIFI_CLUSTER_NODE_PROTOCOL_PORT" : "12000",
7          "NIFI_CLUSTER_NODE_PROTOCOL_THREADS" : "10",
7          "NIFI_CLUSTER_NODE_READ_TIMEOUT" : "5 secs",
A          "NIFI_CLUSTER_PROTOCOL_HEARTBEAT_INTERVAL" : "5 secs",
D          "NIFI_COMPONENTS_STATUS_REPOSITORY_BUFFER_SIZE" : "1440",
é          "NIFI_COMPONENTS_STATUS_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.status.history.VolatileComponentStatusRepository",
B          "NIFI_COMPONENTS_STATUS_SNAPSHOT_FREQUENCY" : "1 mins",
>          "NIFI_CONTENT_CLAIM_MAX_APPENDABLE_SIZE" : "10 MB",
7          "NIFI_CONTENT_CLAIM_MAX_FLOW_FILES" : "100",
;          "NIFI_CONTENT_REPOSITORY_ALWAYS_SYNC" : "false",
>          "NIFI_CONTENT_REPOSITORY_ARCHIVE_ENABLED" : "true",
O          "NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_RETENTION_PERIOD" : "12 hours",
J          "NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_USAGE_PERCENTAGE" : "50%",
N          "NIFI_CONTENT_REPOSITORY_DIRECTORY_DEFAULT" : "content-repository",
s          "NIFI_CONTENT_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.repository.FileSystemRepository",
?          "NIFI_CONTENT_VIEWER_URL" : "/nifi-content-viewer/",
A          "NIFI_CORE_ADMINISTRATIVE_YIELD_DURATION" : "30 secs",
P          "NIFI_CORE_AUTHORIZER_CONFIGURATION_FILE" : "./conf/authorizers.xml",
:          "NIFI_CORE_BORED_YIELD_DURATION" : "10 millis",
R          "NIFI_CORE_DOCUMENTATION_WORKING_DIRECTORY" : "./work/docs/components",
?          "NIFI_CORE_FLOWCONTROLLER_AUTORESUMESTATE" : "true",
K          "NIFI_CORE_FLOWCONTROLLER_GRACEFUL_SHUTDOWN_PERIOD" : "10 secs",
B          "NIFI_CORE_FLOWSERVICE_WRITEDELAY_INTERVAL" : "500 ms",
I          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_DIR" : "./conf/archive",
C          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_ENABLED" : "true",
A          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_COUNT" : "",
I          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_STORAGE" : "500 MB",
G          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_TIME" : "30 days",
D          "NIFI_CORE_FLOW_CONFIGURATION_FILE" : "conf/flow.xml.gz",
j          "NIFI_CORE_LOGIN_IDENTITY_PROVIDER_CONFIGURATION_FILE" : "./conf/login-identity-providers.xml",
7          "NIFI_CORE_NAR_LIBRARY_DIRECTORY" : "./lib",
<          "NIFI_CORE_NAR_WORKING_DIRECTORY" : "./work/nar",
?          "NIFI_CORE_PROCESSOR_SCHEDULING_TIMEOUT" : "1 mins",
@          "NIFI_CORE_TEMPLATES_DIRECTORY" : "./conf/templates",
;          "NIFI_CORE_UI_AUTOREFRESH_INTERVAL" : "30 secs",
+          "NIFI_CORE_UI_BANNER_TEXT" : "",
=          "NIFI_DATABASE_DIRECTORY" : "database-repository",
<          "NIFI_FLOWFILE_REPOSITORY_ALWAYS_SYNC" : "false",
E          "NIFI_FLOWFILE_REPOSITORY_CHECKPOINT_INTERVAL" : "2 mins",
H          "NIFI_FLOWFILE_REPOSITORY_DIRECTORY" : "flowfile-repository",
|          "NIFI_FLOWFILE_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.repository.WriteAheadFlowFileRepository",
9          "NIFI_FLOWFILE_REPOSITORY_PARTITIONS" : "256",
d          "NIFI_H2_URL_APPEND" : ";LOCK_TIMEOUT&#61;25000;WRITE_DELAY&#61;0;AUTO_SERVER&#61;FALSE",
B          "NIFI_KERBEROS_AUTHENTICATION_EXPIRATION" : "12 hours",
=          "NIFI_KERBEROS_DEFAULT_REALM" : "NIFI.APACHE.ORG",
*          "NIFI_KERBEROS_KRB5_FILE" : "",
8          "NIFI_KERBEROS_SERVICE_KEYTAB_LOCATION" : "",
W          "NIFI_KERBEROS_SERVICE_PRINCIPAL" : "nifi/nifi.example.com@NIFI.APACHE.ORG",
I          "NIFI_KERBEROS_SPNEGO_AUTHENTICATION_EXPIRATION" : "12 hours",
7          "NIFI_KERBEROS_SPNEGO_KEYTAB_LOCATION" : "",
V          "NIFI_KERBEROS_SPNEGO_PRINCIPAL" : "HTTP/nifi.example.com@NIFI.APACHE.ORG",
>          "NIFI_LDAP_AUTHENTICATION_EXPIRATION" : "12 hours",
=          "NIFI_LDAP_AUTHENTICATION_STRATEGY" : "START_TLS",
3          "NIFI_LDAP_CONNECT_TIMEOUT" : "10 secs",
4          "NIFI_LDAP_IDENTITY_STRATEGY" : "USE_DN",
'          "NIFI_LDAP_MANAGER_DN" : "",
-          "NIFI_LDAP_MANAGER_PASSWORD" : "",
0          "NIFI_LDAP_READ_TIMEOUT" : "10 secs",
4          "NIFI_LDAP_REFERRAL_STRATEGY" : "FOLLOW",
4          "NIFI_LDAP_TLS_CLIENT_AUTH" : "REQUIRED",
2          "NIFI_LDAP_TLS_KEYSTORE_PASSWORD" : "",
.          "NIFI_LDAP_TLS_KEYSTORE_PATH" : "",
4          "NIFI_LDAP_TLS_KEYSTORE_TYPE" : "PKCS12",
0          "NIFI_LDAP_TLS_PROTOCOL" : "TLSv1.2",
9          "NIFI_LDAP_TLS_SHUTDOWN_GRACEFULLY" : "false",
4          "NIFI_LDAP_TLS_TRUSTSTORE_PASSWORD" : "",
0          "NIFI_LDAP_TLS_TRUSTSTORE_PATH" : "",
6          "NIFI_LDAP_TLS_TRUSTSTORE_TYPE" : "PKCS12",
;          "NIFI_LDAP_URL" : "ldap://ldap.example.com:389",
S          "NIFI_LDAP_USER_SEARCH_BASE" : "CN&#61;Users,DC&#61;example,DC&#61;com",
E          "NIFI_LDAP_USER_SEARCH_FILTER" : "sAMAccountName&#61;{0}",
>          "NIFI_PROVENANCE_REPOSITORY_ALWAYS_SYNC" : "false",
?          "NIFI_PROVENANCE_REPOSITORY_BUFFER_SIZE" : "100000",
F          "NIFI_PROVENANCE_REPOSITORY_COMPRESS_ON_ROLLOVER" : "true",
G          "NIFI_PROVENANCE_REPOSITORY_CONCURRENT_MERGE_THREADS" : "2",
F          "NIFI_PROVENANCE_REPOSITORY_DEBUG_FREQUENCY" : "1_000_000",
T          "NIFI_PROVENANCE_REPOSITORY_DIRECTORY_DEFAULT" : "provenance-repository",
<          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY" : "",
?          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_ID" : "",
T          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_IMPLEMENTATION" : "",
N          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_LOCATION" : "",
u          "NIFI_PROVENANCE_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.provenance.PersistentProvenanceRepository",
@          "NIFI_PROVENANCE_REPOSITORY_INDEXED_ATTRIBUTES" : "",
x          "NIFI_PROVENANCE_REPOSITORY_INDEXED_FIELDS" : "EventType, FlowFileUUID, Filename, ProcessorID, Relationship",
D          "NIFI_PROVENANCE_REPOSITORY_INDEX_SHARD_SIZE" : "500 MB",
<          "NIFI_PROVENANCE_REPOSITORY_INDEX_THREADS" : "2",
=          "NIFI_PROVENANCE_REPOSITORY_JOURNAL_COUNT" : "16",
G          "NIFI_PROVENANCE_REPOSITORY_MAX_ATTRIBUTE_LENGTH" : "65536",
B          "NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_SIZE" : "1 GB",
F          "NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_TIME" : "24 hours",
<          "NIFI_PROVENANCE_REPOSITORY_QUERY_THREADS" : "2",
A          "NIFI_PROVENANCE_REPOSITORY_ROLLOVER_SIZE" : "100 MB",
B          "NIFI_PROVENANCE_REPOSITORY_ROLLOVER_TIME" : "30 secs",
B          "NIFI_PROVENANCE_REPOSITORY_WARM_CACHE_FREQUENCY" : "",
1          "NIFI_QUEUE_SWAP_THRESHOLD" : "20000",
)          "NIFI_REMOTE_INPUT_HOST" : "",
5          "NIFI_REMOTE_INPUT_HTTP_ENABLED" : "true",
@          "NIFI_REMOTE_INPUT_HTTP_TRANSACTION_TTL" : "30 secs",
0          "NIFI_REMOTE_INPUT_SECURE" : "false",
0          "NIFI_REMOTE_INPUT_SOCKET_PORT" : "",
ç          "NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_DN" : "^CN&#61;(.*?), OU&#61;(.*?), O&#61;(.*?), L&#61;(.*?), ST&#61;(.*?), C&#61;(.*?)$",
T          "NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_KERB" : "^(.*?)/instance@(.*?)$",
?          "NIFI_SECURITY_IDENTITY_MAPPING_VALUE_DN" : "$1@$2",
A          "NIFI_SECURITY_IDENTITY_MAPPING_VALUE_KERB" : "$1@$2",
*          "NIFI_SECURITY_KEYPASSWD" : "",
)          "NIFI_SECURITY_KEYSTORE" : "",
/          "NIFI_SECURITY_KEYSTOREPASSWD" : "",
-          "NIFI_SECURITY_KEYSTORETYPE" : "",
/          "NIFI_SECURITY_NEEDCLIENTAUTH" : "",
;          "NIFI_SECURITY_OCSP_RESPONDER_CERTIFICATE" : "",
3          "NIFI_SECURITY_OCSP_RESPONDER_URL" : "",
+          "NIFI_SECURITY_TRUSTSTORE" : "",
1          "NIFI_SECURITY_TRUSTSTOREPASSWD" : "",
/          "NIFI_SECURITY_TRUSTSTORETYPE" : "",
=          "NIFI_SECURITY_USER_AUTHORIZER" : "file-provider",
=          "NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER" : "",
7          "NIFI_SENSITIVE_PROPS_ADDITIONAL_KEYS" : "",
S          "NIFI_SENSITIVE_PROPS_ALGORITHM" : "PBEWITHMD5AND256BITAES-CBC-OPENSSL",
+          "NIFI_SENSITIVE_PROPS_KEY" : "",
5          "NIFI_SENSITIVE_PROPS_KEY_PROTECTED" : "",
2          "NIFI_SENSITIVE_PROPS_PROVIDER" : "BC",
V          "NIFI_STATE_MANAGEMENT_CONFIGURATION_FILE" : "./conf/state-management.xml",
a          "NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_PROPERTIES" : "./conf/zookeeper.properties",
F          "NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_START" : "false",
D          "NIFI_STATE_MANAGEMENT_PROVIDER_CLUSTER" : "zk-provider",
E          "NIFI_STATE_MANAGEMENT_PROVIDER_LOCAL" : "local-provider",
,          "NIFI_SWAP_IN_PERIOD" : "5 secs",
(          "NIFI_SWAP_IN_THREADS" : "1",
c          "NIFI_SWAP_MANAGER_IMPLEMENTATION" : "org.apache.nifi.controller.FileSystemSwapManager",
-          "NIFI_SWAP_OUT_PERIOD" : "5 secs",
)          "NIFI_SWAP_OUT_THREADS" : "4",
4          "NIFI_VARIABLE_REGISTRY_PROPERTIES" : "",
$          "NIFI_VERSION" : "1.5.0",
C          "NIFI_VOLATILE_CONTENT_REPOSITORY_BLOCK_SIZE" : "32 KB",
B          "NIFI_VOLATILE_CONTENT_REPOSITORY_MAX_SIZE" : "100 MB",
&          "NIFI_WEB_HTTPS_HOST" : "",
;          "NIFI_WEB_HTTPS_NETWORK_INTERFACE_DEFAULT" : "",
*          "NIFI_WEB_HTTPS_PORT" : "8443",
%          "NIFI_WEB_HTTP_HOST" : "",
:          "NIFI_WEB_HTTP_NETWORK_INTERFACE_DEFAULT" : "",
)          "NIFI_WEB_HTTP_PORT" : "8080",
,          "NIFI_WEB_JETTY_THREADS" : "200",
?          "NIFI_WEB_JETTY_WORKING_DIRECTORY" : "./work/jetty",
.          "NIFI_WEB_WAR_DIRECTORY" : "./lib",
A          "NIFI_ZOOKEEPER_CONNECT_STRING" : "master.mesos:2181",
7          "NIFI_ZOOKEEPER_CONNECT_TIMEOUT" : "3 secs",
0          "NIFI_ZOOKEEPER_ROOT_NODE" : "/nifi",
6          "NIFI_ZOOKEEPER_SESSION_TIMEOUT" : "3 secs"

        }
	      },
"      "health-check-spec" : null,
%      "readiness-check-spec" : null,
      "config-files" : [ ],
      "discovery-spec" : null,
      "kill-grace-period" : 0,
#      "transport-encryption" : [ ]
	    }, {
      "name" : "node",
      "goal" : "RUNNING",
      "essential" : true,
      "resource-set" : {
!        "id" : "node-resources",
(        "resource-specifications" : [ {
+          "@type" : "DefaultResourceSpec",
          "name" : "cpus",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 1.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        }, {
+          "@type" : "DefaultResourceSpec",
          "name" : "mem",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 4096.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        }, {
$          "@type" : "NamedVIPSpec",
          "value" : {
            "type" : "RANGES",
            "scalar" : null,
            "ranges" : {
              "range" : [ {
                "begin" : 0,
                "end" : 0
              } ]
            },
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
*          "principal" : "nifi-principal",
"          "env-key" : "PORT_WEB",
          "port-name" : "web",
          "protocol" : "tcp",
%          "visibility" : "EXTERNAL",
          "vip-name" : "web",
          "vip-port" : 8080,
!          "network-names" : [ ],
          "name" : "ports"
        }, {
           "@type" : "PortSpec",
          "value" : {
            "type" : "RANGES",
            "scalar" : null,
            "ranges" : {
              "range" : [ {
                "begin" : 0,
                "end" : 0
              } ]
            },
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
*          "principal" : "nifi-principal",
"          "env-key" : "PORT_WEB",
           "port-name" : "node",
%          "visibility" : "EXTERNAL",
!          "network-names" : [ ],
          "name" : "ports"
        } ],
&        "volume-specifications" : [ {
)          "@type" : "DefaultVolumeSpec",
          "type" : "ROOT",
4          "container-path" : "database-repository",
          "name" : "disk",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 1000.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        }, {
)          "@type" : "DefaultVolumeSpec",
          "type" : "ROOT",
4          "container-path" : "flowfile-repository",
          "name" : "disk",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 1000.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        }, {
)          "@type" : "DefaultVolumeSpec",
          "type" : "ROOT",
6          "container-path" : "provenance-repository",
          "name" : "disk",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 1000.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        }, {
)          "@type" : "DefaultVolumeSpec",
          "type" : "ROOT",
3          "container-path" : "content-repository",
          "name" : "disk",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 1000.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        }, {
)          "@type" : "DefaultVolumeSpec",
          "type" : "ROOT",
0          "container-path" : "misc-repository",
          "name" : "disk",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 1000.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        } ],
        "role" : "nifi-role",
'        "principal" : "nifi-principal"
	      },
      "command-spec" : {
â        "value" : "./bootstrap \nexport JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/jre*/) && export JAVA_HOME=${JAVA_HOME%/} && export PATH=$(ls -d $JAVA_HOME/bin):$PATH\necho \"INSTALL\" > misc-repository/readiness-info.txt \n./nifi-${NIFI_VERSION}/bin/nifi.sh run\n",
        "environment" : {
-          "NIFI_CLUSTER_FIREWALL_FILE" : "",
=          "NIFI_CLUSTER_FLOW_ELECTION_MAX_CANDIDATES" : "3",
A          "NIFI_CLUSTER_FLOW_ELECTION_MAX_WAIT_TIME" : "1 mins",
+          "NIFI_CLUSTER_IS_NODE" : "true",
,          "NIFI_CLUSTER_NODE_ADDRESS" : "",
=          "NIFI_CLUSTER_NODE_CONNECTION_TIMEOUT" : "5 secs",
9          "NIFI_CLUSTER_NODE_EVENT_HISTORY_SIZE" : "25",
7          "NIFI_CLUSTER_NODE_PROTOCOL_PORT" : "12000",
7          "NIFI_CLUSTER_NODE_PROTOCOL_THREADS" : "10",
7          "NIFI_CLUSTER_NODE_READ_TIMEOUT" : "5 secs",
A          "NIFI_CLUSTER_PROTOCOL_HEARTBEAT_INTERVAL" : "5 secs",
D          "NIFI_COMPONENTS_STATUS_REPOSITORY_BUFFER_SIZE" : "1440",
é          "NIFI_COMPONENTS_STATUS_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.status.history.VolatileComponentStatusRepository",
B          "NIFI_COMPONENTS_STATUS_SNAPSHOT_FREQUENCY" : "1 mins",
>          "NIFI_CONTENT_CLAIM_MAX_APPENDABLE_SIZE" : "10 MB",
7          "NIFI_CONTENT_CLAIM_MAX_FLOW_FILES" : "100",
;          "NIFI_CONTENT_REPOSITORY_ALWAYS_SYNC" : "false",
>          "NIFI_CONTENT_REPOSITORY_ARCHIVE_ENABLED" : "true",
O          "NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_RETENTION_PERIOD" : "12 hours",
J          "NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_USAGE_PERCENTAGE" : "50%",
N          "NIFI_CONTENT_REPOSITORY_DIRECTORY_DEFAULT" : "content-repository",
s          "NIFI_CONTENT_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.repository.FileSystemRepository",
?          "NIFI_CONTENT_VIEWER_URL" : "/nifi-content-viewer/",
A          "NIFI_CORE_ADMINISTRATIVE_YIELD_DURATION" : "30 secs",
P          "NIFI_CORE_AUTHORIZER_CONFIGURATION_FILE" : "./conf/authorizers.xml",
:          "NIFI_CORE_BORED_YIELD_DURATION" : "10 millis",
R          "NIFI_CORE_DOCUMENTATION_WORKING_DIRECTORY" : "./work/docs/components",
?          "NIFI_CORE_FLOWCONTROLLER_AUTORESUMESTATE" : "true",
K          "NIFI_CORE_FLOWCONTROLLER_GRACEFUL_SHUTDOWN_PERIOD" : "10 secs",
B          "NIFI_CORE_FLOWSERVICE_WRITEDELAY_INTERVAL" : "500 ms",
I          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_DIR" : "./conf/archive",
C          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_ENABLED" : "true",
A          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_COUNT" : "",
I          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_STORAGE" : "500 MB",
G          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_TIME" : "30 days",
D          "NIFI_CORE_FLOW_CONFIGURATION_FILE" : "conf/flow.xml.gz",
j          "NIFI_CORE_LOGIN_IDENTITY_PROVIDER_CONFIGURATION_FILE" : "./conf/login-identity-providers.xml",
7          "NIFI_CORE_NAR_LIBRARY_DIRECTORY" : "./lib",
<          "NIFI_CORE_NAR_WORKING_DIRECTORY" : "./work/nar",
?          "NIFI_CORE_PROCESSOR_SCHEDULING_TIMEOUT" : "1 mins",
@          "NIFI_CORE_TEMPLATES_DIRECTORY" : "./conf/templates",
;          "NIFI_CORE_UI_AUTOREFRESH_INTERVAL" : "30 secs",
+          "NIFI_CORE_UI_BANNER_TEXT" : "",
=          "NIFI_DATABASE_DIRECTORY" : "database-repository",
<          "NIFI_FLOWFILE_REPOSITORY_ALWAYS_SYNC" : "false",
E          "NIFI_FLOWFILE_REPOSITORY_CHECKPOINT_INTERVAL" : "2 mins",
H          "NIFI_FLOWFILE_REPOSITORY_DIRECTORY" : "flowfile-repository",
|          "NIFI_FLOWFILE_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.repository.WriteAheadFlowFileRepository",
9          "NIFI_FLOWFILE_REPOSITORY_PARTITIONS" : "256",
d          "NIFI_H2_URL_APPEND" : ";LOCK_TIMEOUT&#61;25000;WRITE_DELAY&#61;0;AUTO_SERVER&#61;FALSE",
B          "NIFI_KERBEROS_AUTHENTICATION_EXPIRATION" : "12 hours",
=          "NIFI_KERBEROS_DEFAULT_REALM" : "NIFI.APACHE.ORG",
*          "NIFI_KERBEROS_KRB5_FILE" : "",
8          "NIFI_KERBEROS_SERVICE_KEYTAB_LOCATION" : "",
W          "NIFI_KERBEROS_SERVICE_PRINCIPAL" : "nifi/nifi.example.com@NIFI.APACHE.ORG",
I          "NIFI_KERBEROS_SPNEGO_AUTHENTICATION_EXPIRATION" : "12 hours",
7          "NIFI_KERBEROS_SPNEGO_KEYTAB_LOCATION" : "",
V          "NIFI_KERBEROS_SPNEGO_PRINCIPAL" : "HTTP/nifi.example.com@NIFI.APACHE.ORG",
>          "NIFI_LDAP_AUTHENTICATION_EXPIRATION" : "12 hours",
=          "NIFI_LDAP_AUTHENTICATION_STRATEGY" : "START_TLS",
3          "NIFI_LDAP_CONNECT_TIMEOUT" : "10 secs",
4          "NIFI_LDAP_IDENTITY_STRATEGY" : "USE_DN",
'          "NIFI_LDAP_MANAGER_DN" : "",
-          "NIFI_LDAP_MANAGER_PASSWORD" : "",
0          "NIFI_LDAP_READ_TIMEOUT" : "10 secs",
4          "NIFI_LDAP_REFERRAL_STRATEGY" : "FOLLOW",
4          "NIFI_LDAP_TLS_CLIENT_AUTH" : "REQUIRED",
2          "NIFI_LDAP_TLS_KEYSTORE_PASSWORD" : "",
.          "NIFI_LDAP_TLS_KEYSTORE_PATH" : "",
4          "NIFI_LDAP_TLS_KEYSTORE_TYPE" : "PKCS12",
0          "NIFI_LDAP_TLS_PROTOCOL" : "TLSv1.2",
9          "NIFI_LDAP_TLS_SHUTDOWN_GRACEFULLY" : "false",
4          "NIFI_LDAP_TLS_TRUSTSTORE_PASSWORD" : "",
0          "NIFI_LDAP_TLS_TRUSTSTORE_PATH" : "",
6          "NIFI_LDAP_TLS_TRUSTSTORE_TYPE" : "PKCS12",
;          "NIFI_LDAP_URL" : "ldap://ldap.example.com:389",
S          "NIFI_LDAP_USER_SEARCH_BASE" : "CN&#61;Users,DC&#61;example,DC&#61;com",
E          "NIFI_LDAP_USER_SEARCH_FILTER" : "sAMAccountName&#61;{0}",
>          "NIFI_PROVENANCE_REPOSITORY_ALWAYS_SYNC" : "false",
?          "NIFI_PROVENANCE_REPOSITORY_BUFFER_SIZE" : "100000",
F          "NIFI_PROVENANCE_REPOSITORY_COMPRESS_ON_ROLLOVER" : "true",
G          "NIFI_PROVENANCE_REPOSITORY_CONCURRENT_MERGE_THREADS" : "2",
F          "NIFI_PROVENANCE_REPOSITORY_DEBUG_FREQUENCY" : "1_000_000",
T          "NIFI_PROVENANCE_REPOSITORY_DIRECTORY_DEFAULT" : "provenance-repository",
<          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY" : "",
?          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_ID" : "",
T          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_IMPLEMENTATION" : "",
N          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_LOCATION" : "",
u          "NIFI_PROVENANCE_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.provenance.PersistentProvenanceRepository",
@          "NIFI_PROVENANCE_REPOSITORY_INDEXED_ATTRIBUTES" : "",
x          "NIFI_PROVENANCE_REPOSITORY_INDEXED_FIELDS" : "EventType, FlowFileUUID, Filename, ProcessorID, Relationship",
D          "NIFI_PROVENANCE_REPOSITORY_INDEX_SHARD_SIZE" : "500 MB",
<          "NIFI_PROVENANCE_REPOSITORY_INDEX_THREADS" : "2",
=          "NIFI_PROVENANCE_REPOSITORY_JOURNAL_COUNT" : "16",
G          "NIFI_PROVENANCE_REPOSITORY_MAX_ATTRIBUTE_LENGTH" : "65536",
B          "NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_SIZE" : "1 GB",
F          "NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_TIME" : "24 hours",
<          "NIFI_PROVENANCE_REPOSITORY_QUERY_THREADS" : "2",
A          "NIFI_PROVENANCE_REPOSITORY_ROLLOVER_SIZE" : "100 MB",
B          "NIFI_PROVENANCE_REPOSITORY_ROLLOVER_TIME" : "30 secs",
B          "NIFI_PROVENANCE_REPOSITORY_WARM_CACHE_FREQUENCY" : "",
1          "NIFI_QUEUE_SWAP_THRESHOLD" : "20000",
)          "NIFI_REMOTE_INPUT_HOST" : "",
5          "NIFI_REMOTE_INPUT_HTTP_ENABLED" : "true",
@          "NIFI_REMOTE_INPUT_HTTP_TRANSACTION_TTL" : "30 secs",
0          "NIFI_REMOTE_INPUT_SECURE" : "false",
0          "NIFI_REMOTE_INPUT_SOCKET_PORT" : "",
ç          "NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_DN" : "^CN&#61;(.*?), OU&#61;(.*?), O&#61;(.*?), L&#61;(.*?), ST&#61;(.*?), C&#61;(.*?)$",
T          "NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_KERB" : "^(.*?)/instance@(.*?)$",
?          "NIFI_SECURITY_IDENTITY_MAPPING_VALUE_DN" : "$1@$2",
A          "NIFI_SECURITY_IDENTITY_MAPPING_VALUE_KERB" : "$1@$2",
*          "NIFI_SECURITY_KEYPASSWD" : "",
)          "NIFI_SECURITY_KEYSTORE" : "",
/          "NIFI_SECURITY_KEYSTOREPASSWD" : "",
-          "NIFI_SECURITY_KEYSTORETYPE" : "",
/          "NIFI_SECURITY_NEEDCLIENTAUTH" : "",
;          "NIFI_SECURITY_OCSP_RESPONDER_CERTIFICATE" : "",
3          "NIFI_SECURITY_OCSP_RESPONDER_URL" : "",
+          "NIFI_SECURITY_TRUSTSTORE" : "",
1          "NIFI_SECURITY_TRUSTSTOREPASSWD" : "",
/          "NIFI_SECURITY_TRUSTSTORETYPE" : "",
=          "NIFI_SECURITY_USER_AUTHORIZER" : "file-provider",
=          "NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER" : "",
7          "NIFI_SENSITIVE_PROPS_ADDITIONAL_KEYS" : "",
S          "NIFI_SENSITIVE_PROPS_ALGORITHM" : "PBEWITHMD5AND256BITAES-CBC-OPENSSL",
+          "NIFI_SENSITIVE_PROPS_KEY" : "",
5          "NIFI_SENSITIVE_PROPS_KEY_PROTECTED" : "",
2          "NIFI_SENSITIVE_PROPS_PROVIDER" : "BC",
V          "NIFI_STATE_MANAGEMENT_CONFIGURATION_FILE" : "./conf/state-management.xml",
a          "NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_PROPERTIES" : "./conf/zookeeper.properties",
F          "NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_START" : "false",
D          "NIFI_STATE_MANAGEMENT_PROVIDER_CLUSTER" : "zk-provider",
E          "NIFI_STATE_MANAGEMENT_PROVIDER_LOCAL" : "local-provider",
,          "NIFI_SWAP_IN_PERIOD" : "5 secs",
(          "NIFI_SWAP_IN_THREADS" : "1",
c          "NIFI_SWAP_MANAGER_IMPLEMENTATION" : "org.apache.nifi.controller.FileSystemSwapManager",
-          "NIFI_SWAP_OUT_PERIOD" : "5 secs",
)          "NIFI_SWAP_OUT_THREADS" : "4",
4          "NIFI_VARIABLE_REGISTRY_PROPERTIES" : "",
$          "NIFI_VERSION" : "1.5.0",
C          "NIFI_VOLATILE_CONTENT_REPOSITORY_BLOCK_SIZE" : "32 KB",
B          "NIFI_VOLATILE_CONTENT_REPOSITORY_MAX_SIZE" : "100 MB",
&          "NIFI_WEB_HTTPS_HOST" : "",
;          "NIFI_WEB_HTTPS_NETWORK_INTERFACE_DEFAULT" : "",
*          "NIFI_WEB_HTTPS_PORT" : "8443",
%          "NIFI_WEB_HTTP_HOST" : "",
:          "NIFI_WEB_HTTP_NETWORK_INTERFACE_DEFAULT" : "",
)          "NIFI_WEB_HTTP_PORT" : "8080",
,          "NIFI_WEB_JETTY_THREADS" : "200",
?          "NIFI_WEB_JETTY_WORKING_DIRECTORY" : "./work/jetty",
.          "NIFI_WEB_WAR_DIRECTORY" : "./lib",
A          "NIFI_ZOOKEEPER_CONNECT_STRING" : "master.mesos:2181",
7          "NIFI_ZOOKEEPER_CONNECT_TIMEOUT" : "3 secs",
0          "NIFI_ZOOKEEPER_ROOT_NODE" : "/nifi",
7          "NIFI_ZOOKEEPER_SESSION_TIMEOUT" : "3 secs",
          "NODE_CPUS" : "1",
          "NODE_MEM" : "4096"

        }
	      },
"      "health-check-spec" : null,
!      "readiness-check-spec" : {
«        "command" : "# The Nifi node has started when it logs a specific \n# \"${TASK_NAME}.${FRAMEWORK_HOST}:$nifi_web_port is now connected\" log line. \n# An example is below:\n# 2018/03/05 11:11:37 nifi-0-node.nifi.autoip.dcos.thisdcos.directory:1025 is now connected.\nnifi_server_log_files=nifi-${NIFI_VERSION}/logs/nifi-app.log\nnifi_host_name=${TASK_NAME}.${FRAMEWORK_HOST}\nnifi_host_name_local=localhost\nnifi_web_port=${PORT_WEB}\nreadiness_info=`cat misc-repository/readiness-info.txt`\necho \"Executing shell script.\"\necho \"$readiness_info\"\nif [ \"$readiness_info\" == \"INSTALL\" ] ; then\n  echo \"Checking for successful log line in $nifi_server_log_files.\"\n  echo \"Looking for \\\"$nifi_host_name:$nifi_web_port is now connected or NiFi has started.\\\" in the server log file.\"\n  grep -q \"$nifi_host_name:$nifi_web_port is now connected\\|NiFi has started.\" $nifi_server_log_files\n  if [ $? -eq 0 ] ; then\n    echo \"Found started log line.\"\n    echo \"READY\" > misc-repository/readiness-info.txt\n    echo \"HOST=$nifi_host_name_local\" > misc-repository/url-info.properties\n    echo \"PORT=$nifi_web_port\" >> misc-repository/url-info.properties\n  else\n    echo \"started log line not found. Exiting.\"\n    exit 1\n  fi\n  echo \"Required log line found. Nifi is ready.\"\nelif [ $readiness_info == \"READY\" ] ; then\n  echo \"Nifi is ready.\"\nelif [ $readiness_info == \"RUNNING\" ] ; then\n  echo \"Nifi is running.\"\nfi\nexit 0\n",
        "delay" : 10,
        "interval" : 5,
        "timeout" : 120
	      },
      "config-files" : [ {
$        "name" : "nifi.properties",
=        "relative-path" : "nifi-1.5.0/conf/nifi.properties",
Ür        "template-content" : "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Core Properties #\nnifi.flow.configuration.file={{MESOS_SANDBOX}}/{{NIFI_FLOWFILE_REPOSITORY_DIRECTORY}}/flow.xml.gz\nnifi.flow.configuration.archive.enabled={{NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_ENABLED}}\nnifi.flow.configuration.archive.dir={{NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_DIR}}\nnifi.flow.configuration.archive.max.time={{NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_TIME}}\nnifi.flow.configuration.archive.max.storage={{NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_STORAGE}}\nnifi.flow.configuration.archive.max.count={{NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_COUNT}}\nnifi.flowcontroller.autoResumeState={{NIFI_CORE_FLOWCONTROLLER_AUTORESUMESTATE}}\nnifi.flowcontroller.graceful.shutdown.period={{NIFI_CORE_FLOWCONTROLLER_GRACEFUL_SHUTDOWN_PERIOD}}\nnifi.flowservice.writedelay.interval={{NIFI_CORE_FLOWSERVICE_WRITEDELAY_INTERVAL}}\nnifi.administrative.yield.duration={{NIFI_CORE_ADMINISTRATIVE_YIELD_DURATION}}\n# If a component has no work to do (is \"bored\"), how long should we wait before checking again for work?\nnifi.bored.yield.duration={{NIFI_CORE_BORED_YIELD_DURATION}}\n\nnifi.authorizer.configuration.file={{NIFI_CORE_AUTHORIZER_CONFIGURATION_FILE}}\nnifi.login.identity.provider.configuration.file={{NIFI_CORE_LOGIN_IDENTITY_PROVIDER_CONFIGURATION_FILE}}\nnifi.templates.directory={{NIFI_CORE_TEMPLATES_DIRECTORY}}\nnifi.ui.banner.text={{NIFI_CORE_UI_BANNER_TEXT}}\nnifi.ui.autorefresh.interval={{NIFI_CORE_UI_AUTOREFRESH_INTERVAL}}\nnifi.nar.library.directory={{NIFI_CORE_NAR_LIBRARY_DIRECTORY}}\nnifi.nar.working.directory={{NIFI_CORE_NAR_WORKING_DIRECTORY}}\nnifi.documentation.working.directory={{NIFI_CORE_DOCUMENTATION_WORKING_DIRECTORY}}\n\nnifi.processor.scheduling.timeout={{NIFI_CORE_PROCESSOR_SCHEDULING_TIMEOUT}}\n\n\n# State Management #\n####################\nnifi.state.management.configuration.file={{NIFI_STATE_MANAGEMENT_CONFIGURATION_FILE}}\n# The ID of the local state provider\nnifi.state.management.provider.local={{NIFI_STATE_MANAGEMENT_PROVIDER_LOCAL}}\n# The ID of the cluster-wide state provider. This will be ignored if NiFi is not clustered but must be populated if running in a cluster.\nnifi.state.management.provider.cluster={{NIFI_STATE_MANAGEMENT_PROVIDER_CLUSTER}}\n# Specifies whether or not this instance of NiFi should run an embedded ZooKeeper server\nnifi.state.management.embedded.zookeeper.start={{NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_START}}\n# Properties file that provides the ZooKeeper properties to use if <nifi.state.management.embedded.zookeeper.start> is set to true\nnifi.state.management.embedded.zookeeper.properties={{NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_PROPERTIES}}\n\n\n# H2 Settings\nnifi.database.directory={{MESOS_SANDBOX}}/{{NIFI_DATABASE_DIRECTORY}}\nnifi.h2.url.append={{NIFI_H2_URL_APPEND}}\n\n# FlowFile Repository\nnifi.flowfile.repository.implementation={{NIFI_FLOWFILE_REPOSITORY_IMPLEMENTATION}}\nnifi.flowfile.repository.directory={{MESOS_SANDBOX}}/{{NIFI_FLOWFILE_REPOSITORY_DIRECTORY}}\nnifi.flowfile.repository.partitions={{NIFI_FLOWFILE_REPOSITORY_PARTITIONS}}\nnifi.flowfile.repository.checkpoint.interval={{NIFI_FLOWFILE_REPOSITORY_CHECKPOINT_INTERVAL}}\nnifi.flowfile.repository.always.sync={{NIFI_FLOWFILE_REPOSITORY_ALWAYS_SYNC}}\n\n# Swap Management Properties\nnifi.swap.manager.implementation={{NIFI_SWAP_MANAGER_IMPLEMENTATION}}\nnifi.queue.swap.threshold={{NIFI_QUEUE_SWAP_THRESHOLD}}\nnifi.swap.in.period={{NIFI_SWAP_IN_PERIOD}}\nnifi.swap.in.threads={{NIFI_SWAP_IN_THREADS}}\nnifi.swap.out.period={{NIFI_SWAP_OUT_PERIOD}}\nnifi.swap.out.threads={{NIFI_SWAP_OUT_THREADS}}\n\n# Content Repository Properties\nnifi.content.repository.implementation={{NIFI_CONTENT_REPOSITORY_IMPLEMENTATION}}\n\n# File System Content Repository Properties\nnifi.content.claim.max.appendable.size={{NIFI_CONTENT_CLAIM_MAX_APPENDABLE_SIZE}}\nnifi.content.claim.max.flow.files={{NIFI_CONTENT_CLAIM_MAX_FLOW_FILES}}\nnifi.content.repository.directory.default={{MESOS_SANDBOX}}/{{NIFI_CONTENT_REPOSITORY_DIRECTORY_DEFAULT}}\nnifi.content.repository.archive.max.retention.period={{NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_RETENTION_PERIOD}}\nnifi.content.repository.archive.max.usage.percentage={{NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_USAGE_PERCENTAGE}}\nnifi.content.repository.archive.enabled={{NIFI_CONTENT_REPOSITORY_ARCHIVE_ENABLED}}\nnifi.content.repository.always.sync={{NIFI_CONTENT_REPOSITORY_ALWAYS_SYNC}}\nnifi.content.viewer.url={{NIFI_CONTENT_VIEWER_URL}}\n\n#Volatile Content Repository Properties\nnifi.volatile.content.repository.max.size={{NIFI_VOLATILE_CONTENT_REPOSITORY_MAX_SIZE}}\nnifi.volatile.content.repository.block.size={{NIFI_VOLATILE_CONTENT_REPOSITORY_BLOCK_SIZE}}\n\n# Provenance Repository Properties\nnifi.provenance.repository.implementation=org.apache.nifi.provenance.PersistentProvenanceRepository\nnifi.provenance.repository.debug.frequency=1_{{TASK_NAME}}.{{FRAMEWORK_HOST}}\nnifi.provenance.repository.encryption.key.provider.implementation=\nnifi.provenance.repository.encryption.key.provider.location=\nnifi.provenance.repository.encryption.key.id=\nnifi.provenance.repository.encryption.key=\n\n# Provenance Repository Properties\nnifi.provenance.repository.implementation={{NIFI_PROVENANCE_REPOSITORY_IMPLEMENTATION}}\n\n# Persistent Provenance Repository Properties\nnifi.provenance.repository.directory.default={{MESOS_SANDBOX}}/{{NIFI_PROVENANCE_REPOSITORY_DIRECTORY_DEFAULT}}\nnifi.provenance.repository.max.storage.time={{NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_TIME}}\nnifi.provenance.repository.max.storage.size={{NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_SIZE}}\nnifi.provenance.repository.rollover.time={{NIFI_PROVENANCE_REPOSITORY_ROLLOVER_TIME}}\nnifi.provenance.repository.rollover.size={{NIFI_PROVENANCE_REPOSITORY_ROLLOVER_SIZE}}\nnifi.provenance.repository.query.threads={{NIFI_PROVENANCE_REPOSITORY_QUERY_THREADS}}\nnifi.provenance.repository.index.threads={{NIFI_PROVENANCE_REPOSITORY_INDEX_THREADS}}\nnifi.provenance.repository.compress.on.rollover={{NIFI_PROVENANCE_REPOSITORY_COMPRESS_ON_ROLLOVER}}\nnifi.provenance.repository.always.sync={{NIFI_PROVENANCE_REPOSITORY_ALWAYS_SYNC}}\nnifi.provenance.repository.journal.count={{NIFI_PROVENANCE_REPOSITORY_JOURNAL_COUNT}}\nnifi.provenance.repository.indexed.fields={{NIFI_PROVENANCE_REPOSITORY_INDEXED_FIELDS}}\nnifi.provenance.repository.indexed.attributes={{NIFI_PROVENANCE_REPOSITORY_INDEXED_ATTRIBUTES}}\nnifi.provenance.repository.index.shard.size={{NIFI_PROVENANCE_REPOSITORY_INDEX_SHARD_SIZE}}\nnifi.provenance.repository.max.attribute.length={{NIFI_PROVENANCE_REPOSITORY_MAX_ATTRIBUTE_LENGTH}}\n\n# Volatile Provenance Respository Properties\nnifi.provenance.repository.buffer.size={{NIFI_PROVENANCE_REPOSITORY_BUFFER_SIZE}}\n\n# Write Ahead Provenance Repository Properties\n# (In addition to Persistent Provenance Repository Properties)\nnifi.provenance.repository.concurrent.merge.threads={{NIFI_PROVENANCE_REPOSITORY_CONCURRENT_MERGE_THREADS}}\nnifi.provenance.repository.warm.cache.frequency={{NIFI_PROVENANCE_REPOSITORY_WARM_CACHE_FREQUENCY}}\n\n# Encrypted Write Ahead Provenance Repository Properties\nnifi.provenance.repository.debug.frequency={{NIFI_PROVENANCE_REPOSITORY_DEBUG_FREQUENCY}}\nnifi.provenance.repository.encryption.key.provider.implementation={{NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_IMPLEMENTATION}}\nnifi.provenance.repository.encryption.key.provider.location={{NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_LOCATION}}\nnifi.provenance.repository.encryption.key.id={{NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_ID}}\nnifi.provenance.repository.encryption.key={{NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY}}\n\n# Component Status Repository\nnifi.components.status.repository.implementation={{NIFI_COMPONENTS_STATUS_REPOSITORY_IMPLEMENTATION}}\nnifi.components.status.repository.buffer.size={{NIFI_COMPONENTS_STATUS_REPOSITORY_BUFFER_SIZE}}\nnifi.components.status.snapshot.frequency={{NIFI_COMPONENTS_STATUS_SNAPSHOT_FREQUENCY}}\n\n# Site to Site properties\nnifi.remote.input.host={{TASK_NAME}}.{{FRAMEWORK_HOST}}\nnifi.remote.input.secure={{NIFI_REMOTE_INPUT_SECURE}}\nnifi.remote.input.socket.port={{NIFI_REMOTE_INPUT_SOCKET_PORT}}\n{{^NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\nnifi.remote.input.http.enabled={{NIFI_REMOTE_INPUT_HTTP_ENABLED}}\nnifi.remote.input.http.transaction.ttl={{NIFI_REMOTE_INPUT_HTTP_TRANSACTION_TTL}}\n{{/NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\n\n# Web Properties\nnifi.web.war.directory={{NIFI_WEB_WAR_DIRECTORY}}\n{{^NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\nnifi.web.http.host={{TASK_NAME}}.{{FRAMEWORK_HOST}}\nnifi.web.http.port={{PORT_WEB}}\nnifi.web.http.network.interface.default={{NIFI_WEB_HTTP_NETWORK_INTERFACE_DEFAULT}}\nnifi.web.https.host=\nnifi.web.https.port=\nnifi.web.https.network.interface.default=\n{{/NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\n{{#NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\nnifi.web.http.host=\nnifi.web.http.port=\nnifi.web.http.network.interface.default=\nnifi.web.https.host={{TASK_NAME}}.{{FRAMEWORK_HOST}}\nnifi.web.https.port={{PORT_WEB}}\nnifi.web.https.network.interface.default={{NIFI_WEB_HTTPS_NETWORK_INTERFACE_DEFAULT}}\n{{/NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\nnifi.web.jetty.working.directory={{NIFI_WEB_JETTY_WORKING_DIRECTORY}}\nnifi.web.jetty.threads={{NIFI_WEB_JETTY_THREADS}}\n\n# Security Properties\n{{#NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\nnifi.sensitive.props.key={{NIFI_SENSITIVE_PROPS_KEY}}\nnifi.sensitive.props.key.protected={{NIFI_SENSITIVE_PROPS_KEY_PROTECTED}}\nnifi.sensitive.props.algorithm={{NIFI_SENSITIVE_PROPS_ALGORITHM}}\nnifi.sensitive.props.provider={{NIFI_SENSITIVE_PROPS_PROVIDER}}\nnifi.sensitive.props.additional.keys={{NIFI_SENSITIVE_PROPS_ADDITIONAL_KEYS}}\n\nnifi.security.keystore={{MESOS_SANDBOX}}/node.keystore\nnifi.security.keystoreType=jks\nnifi.security.keystorePasswd=notsecure\nnifi.security.keyPasswd=notsecure\nnifi.security.truststore={{MESOS_SANDBOX}}/node.truststore\nnifi.security.truststoreType=jks\nnifi.security.truststorePasswd=notsecure\nnifi.security.needClientAuth=true\n\nnifi.security.user.authorizer=managed-authorizer\nnifi.security.user.login.identity.provider=\nnifi.security.ocsp.responder.url=\nnifi.security.ocsp.responder.certificate=\n{{/NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\n\n{{^NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\nnifi.sensitive.props.key={{NIFI_SENSITIVE_PROPS_KEY}}\nnifi.sensitive.props.key.protected={{NIFI_SENSITIVE_PROPS_KEY_PROTECTED}}\nnifi.sensitive.props.algorithm={{NIFI_SENSITIVE_PROPS_ALGORITHM}}\nnifi.sensitive.props.provider={{NIFI_SENSITIVE_PROPS_PROVIDER}}\nnifi.sensitive.props.additional.keys={{NIFI_SENSITIVE_PROPS_ADDITIONAL_KEYS}}\n\nnifi.security.keystore={{NIFI_SECURITY_KEYSTORE}}\nnifi.security.keystoreType={{NIFI_SECURITY_KEYSTORETYPE}}\nnifi.security.keystorePasswd={{NIFI_SECURITY_KEYSTOREPASSWD}}\nnifi.security.keyPasswd={{NIFI_SECURITY_KEYPASSWD}}\nnifi.security.truststore={{NIFI_SECURITY_TRUSTSTORE}}\nnifi.security.truststoreType={{NIFI_SECURITY_TRUSTSTORETYPE}}\nnifi.security.truststorePasswd={{NIFI_SECURITY_TRUSTSTOREPASSWD}}\n\nnifi.security.needClientAuth={{NIFI_SECURITY_NEEDCLIENTAUTH}}\nnifi.security.user.authorizer={{NIFI_SECURITY_USER_AUTHORIZER}}\nnifi.security.user.login.identity.provider={{NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER}}\nnifi.security.ocsp.responder.url={{NIFI_SECURITY_OCSP_RESPONDER_URL}}\nnifi.security.ocsp.responder.certificate={{NIFI_SECURITY_OCSP_RESPONDER_CERTIFICATE}}\n{{/NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\n\n# Identity Mapping Properties\nnifi.security.identity.mapping.pattern.dn={{NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_DN}}\nnifi.security.identity.mapping.value.dn={{NIFI_SECURITY_IDENTITY_MAPPING_VALUE_DN}}\nnifi.security.identity.mapping.pattern.kerb={{NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_KERB}}\nnifi.security.identity.mapping.value.kerb={{NIFI_SECURITY_IDENTITY_MAPPING_VALUE_KERB}}\n\n# Cluster Common Properties\nnifi.cluster.protocol.heartbeat.interval={{NIFI_CLUSTER_PROTOCOL_HEARTBEAT_INTERVAL}}\n{{^NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\nnifi.cluster.protocol.is.secure=false\n{{/NIFI_CLUSTER_PROTOCOL_IS_SECURE}} \n{{#NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\nnifi.cluster.protocol.is.secure=true\n{{/NIFI_CLUSTER_PROTOCOL_IS_SECURE}}\n\n# Cluster Node Properties\nnifi.cluster.is.node={{NIFI_CLUSTER_IS_NODE}}\nnifi.cluster.node.address={{TASK_NAME}}.{{FRAMEWORK_HOST}}\nnifi.cluster.node.protocol.port={{NIFI_CLUSTER_NODE_PROTOCOL_PORT}}\nnifi.cluster.node.protocol.threads={{NIFI_CLUSTER_NODE_PROTOCOL_THREADS}}\nnifi.cluster.node.event.history.size={{NIFI_CLUSTER_NODE_EVENT_HISTORY_SIZE}}\nnifi.cluster.node.connection.timeout={{NIFI_CLUSTER_NODE_CONNECTION_TIMEOUT}}\nnifi.cluster.node.read.timeout={{NIFI_CLUSTER_NODE_READ_TIMEOUT}}\nnifi.cluster.firewall.file={{NIFI_CLUSTER_FIREWALL_FILE}}\nnifi.cluster.flow.election.max.wait.time={{NIFI_CLUSTER_FLOW_ELECTION_MAX_WAIT_TIME}}\nnifi.cluster.flow.election.max.candidates=\n\n# Zookeeper Properties\nnifi.zookeeper.connect.string={{NIFI_ZOOKEEPER_CONNECT_STRING}}\nnifi.zookeeper.connect.timeout={{NIFI_ZOOKEEPER_CONNECT_TIMEOUT}}\nnifi.zookeeper.session.timeout={{NIFI_ZOOKEEPER_SESSION_TIMEOUT}}\nnifi.zookeeper.root.node=/{{FRAMEWORK_NAME}}\n\n# Kerberos Properties\nnifi.kerberos.krb5.file={{NIFI_KERBEROS_KRB5_FILE}}\nnifi.kerberos.service.principal=nifi/{{TASK_NAME}}.{{FRAMEWORK_HOST}}@{{NIFI_KERBEROS_DEFAULT_REALM}}\nnifi.kerberos.service.keytab.location={{NIFI_KERBEROS_SERVICE_KEYTAB_LOCATION}}\nnifi.kerberos.spnego.principal=HTTP/{{TASK_NAME}}.{{FRAMEWORK_HOST}}@{{NIFI_KERBEROS_DEFAULT_REALM}}\nnifi.kerberos.spnego.keytab.location={{NIFI_KERBEROS_SPNEGO_KEYTAB_LOCATION}}\nnifi.kerberos.spnego.authentication.expiration={{NIFI_KERBEROS_SPNEGO_AUTHENTICATION_EXPIRATION}}\n\n# Custom Properties\nnifi.variable.registry.properties={{NIFI_VARIABLE_REGISTRY_PROPERTIES}}\n"
      } ],
      "discovery-spec" : null,
      "kill-grace-period" : 0,
#      "transport-encryption" : [ ]
	    }, {
"      "name" : "restart-cleanup",
      "goal" : "ONCE",
      "essential" : true,
      "resource-set" : {
+        "id" : "sidecar-cleanupresources",
(        "resource-specifications" : [ {
+          "@type" : "DefaultResourceSpec",
          "name" : "cpus",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 0.5
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        }, {
+          "@type" : "DefaultResourceSpec",
          "name" : "mem",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 512.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        } ],
'        "volume-specifications" : [ ],
        "role" : "nifi-role",
'        "principal" : "nifi-principal"
	      },
      "command-spec" : {
Ø        "value" : "# Clean Nifi Application i.e. remove all disconnected node.\nmisc_repo_path=../../misc-repository\necho \"Executing Janitor program to clean the Nifi disconnected node.\"\nexport JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/jre*/) && export JAVA_HOME=${JAVA_HOME%/} && export PATH=$(ls -d $JAVA_HOME/bin):$PATH\njava -jar dcos-nifi-janitor.jar $misc_repo_path/readiness-info.txt $misc_repo_path/url-info.properties\n",
        "environment" : {
-          "NIFI_CLUSTER_FIREWALL_FILE" : "",
=          "NIFI_CLUSTER_FLOW_ELECTION_MAX_CANDIDATES" : "3",
A          "NIFI_CLUSTER_FLOW_ELECTION_MAX_WAIT_TIME" : "1 mins",
+          "NIFI_CLUSTER_IS_NODE" : "true",
,          "NIFI_CLUSTER_NODE_ADDRESS" : "",
=          "NIFI_CLUSTER_NODE_CONNECTION_TIMEOUT" : "5 secs",
9          "NIFI_CLUSTER_NODE_EVENT_HISTORY_SIZE" : "25",
7          "NIFI_CLUSTER_NODE_PROTOCOL_PORT" : "12000",
7          "NIFI_CLUSTER_NODE_PROTOCOL_THREADS" : "10",
7          "NIFI_CLUSTER_NODE_READ_TIMEOUT" : "5 secs",
A          "NIFI_CLUSTER_PROTOCOL_HEARTBEAT_INTERVAL" : "5 secs",
D          "NIFI_COMPONENTS_STATUS_REPOSITORY_BUFFER_SIZE" : "1440",
é          "NIFI_COMPONENTS_STATUS_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.status.history.VolatileComponentStatusRepository",
B          "NIFI_COMPONENTS_STATUS_SNAPSHOT_FREQUENCY" : "1 mins",
>          "NIFI_CONTENT_CLAIM_MAX_APPENDABLE_SIZE" : "10 MB",
7          "NIFI_CONTENT_CLAIM_MAX_FLOW_FILES" : "100",
;          "NIFI_CONTENT_REPOSITORY_ALWAYS_SYNC" : "false",
>          "NIFI_CONTENT_REPOSITORY_ARCHIVE_ENABLED" : "true",
O          "NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_RETENTION_PERIOD" : "12 hours",
J          "NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_USAGE_PERCENTAGE" : "50%",
N          "NIFI_CONTENT_REPOSITORY_DIRECTORY_DEFAULT" : "content-repository",
s          "NIFI_CONTENT_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.repository.FileSystemRepository",
?          "NIFI_CONTENT_VIEWER_URL" : "/nifi-content-viewer/",
A          "NIFI_CORE_ADMINISTRATIVE_YIELD_DURATION" : "30 secs",
P          "NIFI_CORE_AUTHORIZER_CONFIGURATION_FILE" : "./conf/authorizers.xml",
:          "NIFI_CORE_BORED_YIELD_DURATION" : "10 millis",
R          "NIFI_CORE_DOCUMENTATION_WORKING_DIRECTORY" : "./work/docs/components",
?          "NIFI_CORE_FLOWCONTROLLER_AUTORESUMESTATE" : "true",
K          "NIFI_CORE_FLOWCONTROLLER_GRACEFUL_SHUTDOWN_PERIOD" : "10 secs",
B          "NIFI_CORE_FLOWSERVICE_WRITEDELAY_INTERVAL" : "500 ms",
I          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_DIR" : "./conf/archive",
C          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_ENABLED" : "true",
A          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_COUNT" : "",
I          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_STORAGE" : "500 MB",
G          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_TIME" : "30 days",
D          "NIFI_CORE_FLOW_CONFIGURATION_FILE" : "conf/flow.xml.gz",
j          "NIFI_CORE_LOGIN_IDENTITY_PROVIDER_CONFIGURATION_FILE" : "./conf/login-identity-providers.xml",
7          "NIFI_CORE_NAR_LIBRARY_DIRECTORY" : "./lib",
<          "NIFI_CORE_NAR_WORKING_DIRECTORY" : "./work/nar",
?          "NIFI_CORE_PROCESSOR_SCHEDULING_TIMEOUT" : "1 mins",
@          "NIFI_CORE_TEMPLATES_DIRECTORY" : "./conf/templates",
;          "NIFI_CORE_UI_AUTOREFRESH_INTERVAL" : "30 secs",
+          "NIFI_CORE_UI_BANNER_TEXT" : "",
=          "NIFI_DATABASE_DIRECTORY" : "database-repository",
<          "NIFI_FLOWFILE_REPOSITORY_ALWAYS_SYNC" : "false",
E          "NIFI_FLOWFILE_REPOSITORY_CHECKPOINT_INTERVAL" : "2 mins",
H          "NIFI_FLOWFILE_REPOSITORY_DIRECTORY" : "flowfile-repository",
|          "NIFI_FLOWFILE_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.repository.WriteAheadFlowFileRepository",
9          "NIFI_FLOWFILE_REPOSITORY_PARTITIONS" : "256",
d          "NIFI_H2_URL_APPEND" : ";LOCK_TIMEOUT&#61;25000;WRITE_DELAY&#61;0;AUTO_SERVER&#61;FALSE",
B          "NIFI_KERBEROS_AUTHENTICATION_EXPIRATION" : "12 hours",
=          "NIFI_KERBEROS_DEFAULT_REALM" : "NIFI.APACHE.ORG",
*          "NIFI_KERBEROS_KRB5_FILE" : "",
8          "NIFI_KERBEROS_SERVICE_KEYTAB_LOCATION" : "",
W          "NIFI_KERBEROS_SERVICE_PRINCIPAL" : "nifi/nifi.example.com@NIFI.APACHE.ORG",
I          "NIFI_KERBEROS_SPNEGO_AUTHENTICATION_EXPIRATION" : "12 hours",
7          "NIFI_KERBEROS_SPNEGO_KEYTAB_LOCATION" : "",
V          "NIFI_KERBEROS_SPNEGO_PRINCIPAL" : "HTTP/nifi.example.com@NIFI.APACHE.ORG",
>          "NIFI_LDAP_AUTHENTICATION_EXPIRATION" : "12 hours",
=          "NIFI_LDAP_AUTHENTICATION_STRATEGY" : "START_TLS",
3          "NIFI_LDAP_CONNECT_TIMEOUT" : "10 secs",
4          "NIFI_LDAP_IDENTITY_STRATEGY" : "USE_DN",
'          "NIFI_LDAP_MANAGER_DN" : "",
-          "NIFI_LDAP_MANAGER_PASSWORD" : "",
0          "NIFI_LDAP_READ_TIMEOUT" : "10 secs",
4          "NIFI_LDAP_REFERRAL_STRATEGY" : "FOLLOW",
4          "NIFI_LDAP_TLS_CLIENT_AUTH" : "REQUIRED",
2          "NIFI_LDAP_TLS_KEYSTORE_PASSWORD" : "",
.          "NIFI_LDAP_TLS_KEYSTORE_PATH" : "",
4          "NIFI_LDAP_TLS_KEYSTORE_TYPE" : "PKCS12",
0          "NIFI_LDAP_TLS_PROTOCOL" : "TLSv1.2",
9          "NIFI_LDAP_TLS_SHUTDOWN_GRACEFULLY" : "false",
4          "NIFI_LDAP_TLS_TRUSTSTORE_PASSWORD" : "",
0          "NIFI_LDAP_TLS_TRUSTSTORE_PATH" : "",
6          "NIFI_LDAP_TLS_TRUSTSTORE_TYPE" : "PKCS12",
;          "NIFI_LDAP_URL" : "ldap://ldap.example.com:389",
S          "NIFI_LDAP_USER_SEARCH_BASE" : "CN&#61;Users,DC&#61;example,DC&#61;com",
E          "NIFI_LDAP_USER_SEARCH_FILTER" : "sAMAccountName&#61;{0}",
>          "NIFI_PROVENANCE_REPOSITORY_ALWAYS_SYNC" : "false",
?          "NIFI_PROVENANCE_REPOSITORY_BUFFER_SIZE" : "100000",
F          "NIFI_PROVENANCE_REPOSITORY_COMPRESS_ON_ROLLOVER" : "true",
G          "NIFI_PROVENANCE_REPOSITORY_CONCURRENT_MERGE_THREADS" : "2",
F          "NIFI_PROVENANCE_REPOSITORY_DEBUG_FREQUENCY" : "1_000_000",
T          "NIFI_PROVENANCE_REPOSITORY_DIRECTORY_DEFAULT" : "provenance-repository",
<          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY" : "",
?          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_ID" : "",
T          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_IMPLEMENTATION" : "",
N          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_LOCATION" : "",
u          "NIFI_PROVENANCE_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.provenance.PersistentProvenanceRepository",
@          "NIFI_PROVENANCE_REPOSITORY_INDEXED_ATTRIBUTES" : "",
x          "NIFI_PROVENANCE_REPOSITORY_INDEXED_FIELDS" : "EventType, FlowFileUUID, Filename, ProcessorID, Relationship",
D          "NIFI_PROVENANCE_REPOSITORY_INDEX_SHARD_SIZE" : "500 MB",
<          "NIFI_PROVENANCE_REPOSITORY_INDEX_THREADS" : "2",
=          "NIFI_PROVENANCE_REPOSITORY_JOURNAL_COUNT" : "16",
G          "NIFI_PROVENANCE_REPOSITORY_MAX_ATTRIBUTE_LENGTH" : "65536",
B          "NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_SIZE" : "1 GB",
F          "NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_TIME" : "24 hours",
<          "NIFI_PROVENANCE_REPOSITORY_QUERY_THREADS" : "2",
A          "NIFI_PROVENANCE_REPOSITORY_ROLLOVER_SIZE" : "100 MB",
B          "NIFI_PROVENANCE_REPOSITORY_ROLLOVER_TIME" : "30 secs",
B          "NIFI_PROVENANCE_REPOSITORY_WARM_CACHE_FREQUENCY" : "",
1          "NIFI_QUEUE_SWAP_THRESHOLD" : "20000",
)          "NIFI_REMOTE_INPUT_HOST" : "",
5          "NIFI_REMOTE_INPUT_HTTP_ENABLED" : "true",
@          "NIFI_REMOTE_INPUT_HTTP_TRANSACTION_TTL" : "30 secs",
0          "NIFI_REMOTE_INPUT_SECURE" : "false",
0          "NIFI_REMOTE_INPUT_SOCKET_PORT" : "",
ç          "NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_DN" : "^CN&#61;(.*?), OU&#61;(.*?), O&#61;(.*?), L&#61;(.*?), ST&#61;(.*?), C&#61;(.*?)$",
T          "NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_KERB" : "^(.*?)/instance@(.*?)$",
?          "NIFI_SECURITY_IDENTITY_MAPPING_VALUE_DN" : "$1@$2",
A          "NIFI_SECURITY_IDENTITY_MAPPING_VALUE_KERB" : "$1@$2",
*          "NIFI_SECURITY_KEYPASSWD" : "",
)          "NIFI_SECURITY_KEYSTORE" : "",
/          "NIFI_SECURITY_KEYSTOREPASSWD" : "",
-          "NIFI_SECURITY_KEYSTORETYPE" : "",
/          "NIFI_SECURITY_NEEDCLIENTAUTH" : "",
;          "NIFI_SECURITY_OCSP_RESPONDER_CERTIFICATE" : "",
3          "NIFI_SECURITY_OCSP_RESPONDER_URL" : "",
+          "NIFI_SECURITY_TRUSTSTORE" : "",
1          "NIFI_SECURITY_TRUSTSTOREPASSWD" : "",
/          "NIFI_SECURITY_TRUSTSTORETYPE" : "",
=          "NIFI_SECURITY_USER_AUTHORIZER" : "file-provider",
=          "NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER" : "",
7          "NIFI_SENSITIVE_PROPS_ADDITIONAL_KEYS" : "",
S          "NIFI_SENSITIVE_PROPS_ALGORITHM" : "PBEWITHMD5AND256BITAES-CBC-OPENSSL",
+          "NIFI_SENSITIVE_PROPS_KEY" : "",
5          "NIFI_SENSITIVE_PROPS_KEY_PROTECTED" : "",
2          "NIFI_SENSITIVE_PROPS_PROVIDER" : "BC",
V          "NIFI_STATE_MANAGEMENT_CONFIGURATION_FILE" : "./conf/state-management.xml",
a          "NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_PROPERTIES" : "./conf/zookeeper.properties",
F          "NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_START" : "false",
D          "NIFI_STATE_MANAGEMENT_PROVIDER_CLUSTER" : "zk-provider",
E          "NIFI_STATE_MANAGEMENT_PROVIDER_LOCAL" : "local-provider",
,          "NIFI_SWAP_IN_PERIOD" : "5 secs",
(          "NIFI_SWAP_IN_THREADS" : "1",
c          "NIFI_SWAP_MANAGER_IMPLEMENTATION" : "org.apache.nifi.controller.FileSystemSwapManager",
-          "NIFI_SWAP_OUT_PERIOD" : "5 secs",
)          "NIFI_SWAP_OUT_THREADS" : "4",
4          "NIFI_VARIABLE_REGISTRY_PROPERTIES" : "",
$          "NIFI_VERSION" : "1.5.0",
C          "NIFI_VOLATILE_CONTENT_REPOSITORY_BLOCK_SIZE" : "32 KB",
B          "NIFI_VOLATILE_CONTENT_REPOSITORY_MAX_SIZE" : "100 MB",
&          "NIFI_WEB_HTTPS_HOST" : "",
;          "NIFI_WEB_HTTPS_NETWORK_INTERFACE_DEFAULT" : "",
*          "NIFI_WEB_HTTPS_PORT" : "8443",
%          "NIFI_WEB_HTTP_HOST" : "",
:          "NIFI_WEB_HTTP_NETWORK_INTERFACE_DEFAULT" : "",
)          "NIFI_WEB_HTTP_PORT" : "8080",
,          "NIFI_WEB_JETTY_THREADS" : "200",
?          "NIFI_WEB_JETTY_WORKING_DIRECTORY" : "./work/jetty",
.          "NIFI_WEB_WAR_DIRECTORY" : "./lib",
A          "NIFI_ZOOKEEPER_CONNECT_STRING" : "master.mesos:2181",
7          "NIFI_ZOOKEEPER_CONNECT_TIMEOUT" : "3 secs",
0          "NIFI_ZOOKEEPER_ROOT_NODE" : "/nifi",
6          "NIFI_ZOOKEEPER_SESSION_TIMEOUT" : "3 secs"

        }
	      },
"      "health-check-spec" : null,
%      "readiness-check-spec" : null,
      "config-files" : [ ],
      "discovery-spec" : null,
      "kill-grace-period" : 0,
#      "transport-encryption" : [ ]
	    }, {
      "name" : "backup",
      "goal" : "ONCE",
      "essential" : true,
      "resource-set" : {
$        "id" : "sidecar-resources",
(        "resource-specifications" : [ {
+          "@type" : "DefaultResourceSpec",
          "name" : "cpus",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 0.5
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        }, {
+          "@type" : "DefaultResourceSpec",
          "name" : "mem",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 512.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        } ],
&        "volume-specifications" : [ {
)          "@type" : "DefaultVolumeSpec",
          "type" : "ROOT",
,          "container-path" : "nifi-backup",
          "name" : "disk",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 500.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        } ],
        "role" : "nifi-role",
'        "principal" : "nifi-principal"
	      },
      "command-spec" : {
Ù        "value" : "export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/jre*) ; sh $MESOS_SANDBOX/nifi-toolkit-${NIFI_VERSION}/bin/file-manager.sh -o backup -b nifi-backup -c $MESOS_SANDBOX/../../tasks/nifi-$POD_INSTANCE_INDEX-node*/nifi-1.5.0 -v;\n",
        "environment" : {
-          "NIFI_CLUSTER_FIREWALL_FILE" : "",
=          "NIFI_CLUSTER_FLOW_ELECTION_MAX_CANDIDATES" : "3",
A          "NIFI_CLUSTER_FLOW_ELECTION_MAX_WAIT_TIME" : "1 mins",
+          "NIFI_CLUSTER_IS_NODE" : "true",
,          "NIFI_CLUSTER_NODE_ADDRESS" : "",
=          "NIFI_CLUSTER_NODE_CONNECTION_TIMEOUT" : "5 secs",
9          "NIFI_CLUSTER_NODE_EVENT_HISTORY_SIZE" : "25",
7          "NIFI_CLUSTER_NODE_PROTOCOL_PORT" : "12000",
7          "NIFI_CLUSTER_NODE_PROTOCOL_THREADS" : "10",
7          "NIFI_CLUSTER_NODE_READ_TIMEOUT" : "5 secs",
A          "NIFI_CLUSTER_PROTOCOL_HEARTBEAT_INTERVAL" : "5 secs",
D          "NIFI_COMPONENTS_STATUS_REPOSITORY_BUFFER_SIZE" : "1440",
é          "NIFI_COMPONENTS_STATUS_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.status.history.VolatileComponentStatusRepository",
B          "NIFI_COMPONENTS_STATUS_SNAPSHOT_FREQUENCY" : "1 mins",
>          "NIFI_CONTENT_CLAIM_MAX_APPENDABLE_SIZE" : "10 MB",
7          "NIFI_CONTENT_CLAIM_MAX_FLOW_FILES" : "100",
;          "NIFI_CONTENT_REPOSITORY_ALWAYS_SYNC" : "false",
>          "NIFI_CONTENT_REPOSITORY_ARCHIVE_ENABLED" : "true",
O          "NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_RETENTION_PERIOD" : "12 hours",
J          "NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_USAGE_PERCENTAGE" : "50%",
N          "NIFI_CONTENT_REPOSITORY_DIRECTORY_DEFAULT" : "content-repository",
s          "NIFI_CONTENT_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.repository.FileSystemRepository",
?          "NIFI_CONTENT_VIEWER_URL" : "/nifi-content-viewer/",
A          "NIFI_CORE_ADMINISTRATIVE_YIELD_DURATION" : "30 secs",
P          "NIFI_CORE_AUTHORIZER_CONFIGURATION_FILE" : "./conf/authorizers.xml",
:          "NIFI_CORE_BORED_YIELD_DURATION" : "10 millis",
R          "NIFI_CORE_DOCUMENTATION_WORKING_DIRECTORY" : "./work/docs/components",
?          "NIFI_CORE_FLOWCONTROLLER_AUTORESUMESTATE" : "true",
K          "NIFI_CORE_FLOWCONTROLLER_GRACEFUL_SHUTDOWN_PERIOD" : "10 secs",
B          "NIFI_CORE_FLOWSERVICE_WRITEDELAY_INTERVAL" : "500 ms",
I          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_DIR" : "./conf/archive",
C          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_ENABLED" : "true",
A          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_COUNT" : "",
I          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_STORAGE" : "500 MB",
G          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_TIME" : "30 days",
D          "NIFI_CORE_FLOW_CONFIGURATION_FILE" : "conf/flow.xml.gz",
j          "NIFI_CORE_LOGIN_IDENTITY_PROVIDER_CONFIGURATION_FILE" : "./conf/login-identity-providers.xml",
7          "NIFI_CORE_NAR_LIBRARY_DIRECTORY" : "./lib",
<          "NIFI_CORE_NAR_WORKING_DIRECTORY" : "./work/nar",
?          "NIFI_CORE_PROCESSOR_SCHEDULING_TIMEOUT" : "1 mins",
@          "NIFI_CORE_TEMPLATES_DIRECTORY" : "./conf/templates",
;          "NIFI_CORE_UI_AUTOREFRESH_INTERVAL" : "30 secs",
+          "NIFI_CORE_UI_BANNER_TEXT" : "",
=          "NIFI_DATABASE_DIRECTORY" : "database-repository",
<          "NIFI_FLOWFILE_REPOSITORY_ALWAYS_SYNC" : "false",
E          "NIFI_FLOWFILE_REPOSITORY_CHECKPOINT_INTERVAL" : "2 mins",
H          "NIFI_FLOWFILE_REPOSITORY_DIRECTORY" : "flowfile-repository",
|          "NIFI_FLOWFILE_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.repository.WriteAheadFlowFileRepository",
9          "NIFI_FLOWFILE_REPOSITORY_PARTITIONS" : "256",
d          "NIFI_H2_URL_APPEND" : ";LOCK_TIMEOUT&#61;25000;WRITE_DELAY&#61;0;AUTO_SERVER&#61;FALSE",
B          "NIFI_KERBEROS_AUTHENTICATION_EXPIRATION" : "12 hours",
=          "NIFI_KERBEROS_DEFAULT_REALM" : "NIFI.APACHE.ORG",
*          "NIFI_KERBEROS_KRB5_FILE" : "",
8          "NIFI_KERBEROS_SERVICE_KEYTAB_LOCATION" : "",
W          "NIFI_KERBEROS_SERVICE_PRINCIPAL" : "nifi/nifi.example.com@NIFI.APACHE.ORG",
I          "NIFI_KERBEROS_SPNEGO_AUTHENTICATION_EXPIRATION" : "12 hours",
7          "NIFI_KERBEROS_SPNEGO_KEYTAB_LOCATION" : "",
V          "NIFI_KERBEROS_SPNEGO_PRINCIPAL" : "HTTP/nifi.example.com@NIFI.APACHE.ORG",
>          "NIFI_LDAP_AUTHENTICATION_EXPIRATION" : "12 hours",
=          "NIFI_LDAP_AUTHENTICATION_STRATEGY" : "START_TLS",
3          "NIFI_LDAP_CONNECT_TIMEOUT" : "10 secs",
4          "NIFI_LDAP_IDENTITY_STRATEGY" : "USE_DN",
'          "NIFI_LDAP_MANAGER_DN" : "",
-          "NIFI_LDAP_MANAGER_PASSWORD" : "",
0          "NIFI_LDAP_READ_TIMEOUT" : "10 secs",
4          "NIFI_LDAP_REFERRAL_STRATEGY" : "FOLLOW",
4          "NIFI_LDAP_TLS_CLIENT_AUTH" : "REQUIRED",
2          "NIFI_LDAP_TLS_KEYSTORE_PASSWORD" : "",
.          "NIFI_LDAP_TLS_KEYSTORE_PATH" : "",
4          "NIFI_LDAP_TLS_KEYSTORE_TYPE" : "PKCS12",
0          "NIFI_LDAP_TLS_PROTOCOL" : "TLSv1.2",
9          "NIFI_LDAP_TLS_SHUTDOWN_GRACEFULLY" : "false",
4          "NIFI_LDAP_TLS_TRUSTSTORE_PASSWORD" : "",
0          "NIFI_LDAP_TLS_TRUSTSTORE_PATH" : "",
6          "NIFI_LDAP_TLS_TRUSTSTORE_TYPE" : "PKCS12",
;          "NIFI_LDAP_URL" : "ldap://ldap.example.com:389",
S          "NIFI_LDAP_USER_SEARCH_BASE" : "CN&#61;Users,DC&#61;example,DC&#61;com",
E          "NIFI_LDAP_USER_SEARCH_FILTER" : "sAMAccountName&#61;{0}",
>          "NIFI_PROVENANCE_REPOSITORY_ALWAYS_SYNC" : "false",
?          "NIFI_PROVENANCE_REPOSITORY_BUFFER_SIZE" : "100000",
F          "NIFI_PROVENANCE_REPOSITORY_COMPRESS_ON_ROLLOVER" : "true",
G          "NIFI_PROVENANCE_REPOSITORY_CONCURRENT_MERGE_THREADS" : "2",
F          "NIFI_PROVENANCE_REPOSITORY_DEBUG_FREQUENCY" : "1_000_000",
T          "NIFI_PROVENANCE_REPOSITORY_DIRECTORY_DEFAULT" : "provenance-repository",
<          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY" : "",
?          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_ID" : "",
T          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_IMPLEMENTATION" : "",
N          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_LOCATION" : "",
u          "NIFI_PROVENANCE_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.provenance.PersistentProvenanceRepository",
@          "NIFI_PROVENANCE_REPOSITORY_INDEXED_ATTRIBUTES" : "",
x          "NIFI_PROVENANCE_REPOSITORY_INDEXED_FIELDS" : "EventType, FlowFileUUID, Filename, ProcessorID, Relationship",
D          "NIFI_PROVENANCE_REPOSITORY_INDEX_SHARD_SIZE" : "500 MB",
<          "NIFI_PROVENANCE_REPOSITORY_INDEX_THREADS" : "2",
=          "NIFI_PROVENANCE_REPOSITORY_JOURNAL_COUNT" : "16",
G          "NIFI_PROVENANCE_REPOSITORY_MAX_ATTRIBUTE_LENGTH" : "65536",
B          "NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_SIZE" : "1 GB",
F          "NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_TIME" : "24 hours",
<          "NIFI_PROVENANCE_REPOSITORY_QUERY_THREADS" : "2",
A          "NIFI_PROVENANCE_REPOSITORY_ROLLOVER_SIZE" : "100 MB",
B          "NIFI_PROVENANCE_REPOSITORY_ROLLOVER_TIME" : "30 secs",
B          "NIFI_PROVENANCE_REPOSITORY_WARM_CACHE_FREQUENCY" : "",
1          "NIFI_QUEUE_SWAP_THRESHOLD" : "20000",
)          "NIFI_REMOTE_INPUT_HOST" : "",
5          "NIFI_REMOTE_INPUT_HTTP_ENABLED" : "true",
@          "NIFI_REMOTE_INPUT_HTTP_TRANSACTION_TTL" : "30 secs",
0          "NIFI_REMOTE_INPUT_SECURE" : "false",
0          "NIFI_REMOTE_INPUT_SOCKET_PORT" : "",
ç          "NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_DN" : "^CN&#61;(.*?), OU&#61;(.*?), O&#61;(.*?), L&#61;(.*?), ST&#61;(.*?), C&#61;(.*?)$",
T          "NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_KERB" : "^(.*?)/instance@(.*?)$",
?          "NIFI_SECURITY_IDENTITY_MAPPING_VALUE_DN" : "$1@$2",
A          "NIFI_SECURITY_IDENTITY_MAPPING_VALUE_KERB" : "$1@$2",
*          "NIFI_SECURITY_KEYPASSWD" : "",
)          "NIFI_SECURITY_KEYSTORE" : "",
/          "NIFI_SECURITY_KEYSTOREPASSWD" : "",
-          "NIFI_SECURITY_KEYSTORETYPE" : "",
/          "NIFI_SECURITY_NEEDCLIENTAUTH" : "",
;          "NIFI_SECURITY_OCSP_RESPONDER_CERTIFICATE" : "",
3          "NIFI_SECURITY_OCSP_RESPONDER_URL" : "",
+          "NIFI_SECURITY_TRUSTSTORE" : "",
1          "NIFI_SECURITY_TRUSTSTOREPASSWD" : "",
/          "NIFI_SECURITY_TRUSTSTORETYPE" : "",
=          "NIFI_SECURITY_USER_AUTHORIZER" : "file-provider",
=          "NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER" : "",
7          "NIFI_SENSITIVE_PROPS_ADDITIONAL_KEYS" : "",
S          "NIFI_SENSITIVE_PROPS_ALGORITHM" : "PBEWITHMD5AND256BITAES-CBC-OPENSSL",
+          "NIFI_SENSITIVE_PROPS_KEY" : "",
5          "NIFI_SENSITIVE_PROPS_KEY_PROTECTED" : "",
2          "NIFI_SENSITIVE_PROPS_PROVIDER" : "BC",
V          "NIFI_STATE_MANAGEMENT_CONFIGURATION_FILE" : "./conf/state-management.xml",
a          "NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_PROPERTIES" : "./conf/zookeeper.properties",
F          "NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_START" : "false",
D          "NIFI_STATE_MANAGEMENT_PROVIDER_CLUSTER" : "zk-provider",
E          "NIFI_STATE_MANAGEMENT_PROVIDER_LOCAL" : "local-provider",
,          "NIFI_SWAP_IN_PERIOD" : "5 secs",
(          "NIFI_SWAP_IN_THREADS" : "1",
c          "NIFI_SWAP_MANAGER_IMPLEMENTATION" : "org.apache.nifi.controller.FileSystemSwapManager",
-          "NIFI_SWAP_OUT_PERIOD" : "5 secs",
)          "NIFI_SWAP_OUT_THREADS" : "4",
4          "NIFI_VARIABLE_REGISTRY_PROPERTIES" : "",
$          "NIFI_VERSION" : "1.5.0",
C          "NIFI_VOLATILE_CONTENT_REPOSITORY_BLOCK_SIZE" : "32 KB",
B          "NIFI_VOLATILE_CONTENT_REPOSITORY_MAX_SIZE" : "100 MB",
&          "NIFI_WEB_HTTPS_HOST" : "",
;          "NIFI_WEB_HTTPS_NETWORK_INTERFACE_DEFAULT" : "",
*          "NIFI_WEB_HTTPS_PORT" : "8443",
%          "NIFI_WEB_HTTP_HOST" : "",
:          "NIFI_WEB_HTTP_NETWORK_INTERFACE_DEFAULT" : "",
)          "NIFI_WEB_HTTP_PORT" : "8080",
,          "NIFI_WEB_JETTY_THREADS" : "200",
?          "NIFI_WEB_JETTY_WORKING_DIRECTORY" : "./work/jetty",
.          "NIFI_WEB_WAR_DIRECTORY" : "./lib",
A          "NIFI_ZOOKEEPER_CONNECT_STRING" : "master.mesos:2181",
7          "NIFI_ZOOKEEPER_CONNECT_TIMEOUT" : "3 secs",
0          "NIFI_ZOOKEEPER_ROOT_NODE" : "/nifi",
6          "NIFI_ZOOKEEPER_SESSION_TIMEOUT" : "3 secs"

        }
	      },
"      "health-check-spec" : null,
%      "readiness-check-spec" : null,
      "config-files" : [ ],
      "discovery-spec" : null,
      "kill-grace-period" : 0,
#      "transport-encryption" : [ ]
	    }, {
      "name" : "upload-s3",
      "goal" : "ONCE",
      "essential" : true,
      "resource-set" : {
$        "id" : "sidecar-resources",
(        "resource-specifications" : [ {
+          "@type" : "DefaultResourceSpec",
          "name" : "cpus",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 0.5
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        }, {
+          "@type" : "DefaultResourceSpec",
          "name" : "mem",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 512.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        } ],
&        "volume-specifications" : [ {
)          "@type" : "DefaultVolumeSpec",
          "type" : "ROOT",
,          "container-path" : "nifi-backup",
          "name" : "disk",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 500.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        } ],
        "role" : "nifi-role",
'        "principal" : "nifi-principal"
	      },
      "command-spec" : {
ü        "value" : "export PATH=$MESOS_SANDBOX/python-dist/bin:$PATH ; aws s3 cp nifi-backup s3://${S3_BUCKET_NAME}/nifi-${POD_INSTANCE_INDEX}/ --recursive\n",
        "environment" : {
-          "NIFI_CLUSTER_FIREWALL_FILE" : "",
=          "NIFI_CLUSTER_FLOW_ELECTION_MAX_CANDIDATES" : "3",
A          "NIFI_CLUSTER_FLOW_ELECTION_MAX_WAIT_TIME" : "1 mins",
+          "NIFI_CLUSTER_IS_NODE" : "true",
,          "NIFI_CLUSTER_NODE_ADDRESS" : "",
=          "NIFI_CLUSTER_NODE_CONNECTION_TIMEOUT" : "5 secs",
9          "NIFI_CLUSTER_NODE_EVENT_HISTORY_SIZE" : "25",
7          "NIFI_CLUSTER_NODE_PROTOCOL_PORT" : "12000",
7          "NIFI_CLUSTER_NODE_PROTOCOL_THREADS" : "10",
7          "NIFI_CLUSTER_NODE_READ_TIMEOUT" : "5 secs",
A          "NIFI_CLUSTER_PROTOCOL_HEARTBEAT_INTERVAL" : "5 secs",
D          "NIFI_COMPONENTS_STATUS_REPOSITORY_BUFFER_SIZE" : "1440",
é          "NIFI_COMPONENTS_STATUS_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.status.history.VolatileComponentStatusRepository",
B          "NIFI_COMPONENTS_STATUS_SNAPSHOT_FREQUENCY" : "1 mins",
>          "NIFI_CONTENT_CLAIM_MAX_APPENDABLE_SIZE" : "10 MB",
7          "NIFI_CONTENT_CLAIM_MAX_FLOW_FILES" : "100",
;          "NIFI_CONTENT_REPOSITORY_ALWAYS_SYNC" : "false",
>          "NIFI_CONTENT_REPOSITORY_ARCHIVE_ENABLED" : "true",
O          "NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_RETENTION_PERIOD" : "12 hours",
J          "NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_USAGE_PERCENTAGE" : "50%",
N          "NIFI_CONTENT_REPOSITORY_DIRECTORY_DEFAULT" : "content-repository",
s          "NIFI_CONTENT_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.repository.FileSystemRepository",
?          "NIFI_CONTENT_VIEWER_URL" : "/nifi-content-viewer/",
A          "NIFI_CORE_ADMINISTRATIVE_YIELD_DURATION" : "30 secs",
P          "NIFI_CORE_AUTHORIZER_CONFIGURATION_FILE" : "./conf/authorizers.xml",
:          "NIFI_CORE_BORED_YIELD_DURATION" : "10 millis",
R          "NIFI_CORE_DOCUMENTATION_WORKING_DIRECTORY" : "./work/docs/components",
?          "NIFI_CORE_FLOWCONTROLLER_AUTORESUMESTATE" : "true",
K          "NIFI_CORE_FLOWCONTROLLER_GRACEFUL_SHUTDOWN_PERIOD" : "10 secs",
B          "NIFI_CORE_FLOWSERVICE_WRITEDELAY_INTERVAL" : "500 ms",
I          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_DIR" : "./conf/archive",
C          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_ENABLED" : "true",
A          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_COUNT" : "",
I          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_STORAGE" : "500 MB",
G          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_TIME" : "30 days",
D          "NIFI_CORE_FLOW_CONFIGURATION_FILE" : "conf/flow.xml.gz",
j          "NIFI_CORE_LOGIN_IDENTITY_PROVIDER_CONFIGURATION_FILE" : "./conf/login-identity-providers.xml",
7          "NIFI_CORE_NAR_LIBRARY_DIRECTORY" : "./lib",
<          "NIFI_CORE_NAR_WORKING_DIRECTORY" : "./work/nar",
?          "NIFI_CORE_PROCESSOR_SCHEDULING_TIMEOUT" : "1 mins",
@          "NIFI_CORE_TEMPLATES_DIRECTORY" : "./conf/templates",
;          "NIFI_CORE_UI_AUTOREFRESH_INTERVAL" : "30 secs",
+          "NIFI_CORE_UI_BANNER_TEXT" : "",
=          "NIFI_DATABASE_DIRECTORY" : "database-repository",
<          "NIFI_FLOWFILE_REPOSITORY_ALWAYS_SYNC" : "false",
E          "NIFI_FLOWFILE_REPOSITORY_CHECKPOINT_INTERVAL" : "2 mins",
H          "NIFI_FLOWFILE_REPOSITORY_DIRECTORY" : "flowfile-repository",
|          "NIFI_FLOWFILE_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.repository.WriteAheadFlowFileRepository",
9          "NIFI_FLOWFILE_REPOSITORY_PARTITIONS" : "256",
d          "NIFI_H2_URL_APPEND" : ";LOCK_TIMEOUT&#61;25000;WRITE_DELAY&#61;0;AUTO_SERVER&#61;FALSE",
B          "NIFI_KERBEROS_AUTHENTICATION_EXPIRATION" : "12 hours",
=          "NIFI_KERBEROS_DEFAULT_REALM" : "NIFI.APACHE.ORG",
*          "NIFI_KERBEROS_KRB5_FILE" : "",
8          "NIFI_KERBEROS_SERVICE_KEYTAB_LOCATION" : "",
W          "NIFI_KERBEROS_SERVICE_PRINCIPAL" : "nifi/nifi.example.com@NIFI.APACHE.ORG",
I          "NIFI_KERBEROS_SPNEGO_AUTHENTICATION_EXPIRATION" : "12 hours",
7          "NIFI_KERBEROS_SPNEGO_KEYTAB_LOCATION" : "",
V          "NIFI_KERBEROS_SPNEGO_PRINCIPAL" : "HTTP/nifi.example.com@NIFI.APACHE.ORG",
>          "NIFI_LDAP_AUTHENTICATION_EXPIRATION" : "12 hours",
=          "NIFI_LDAP_AUTHENTICATION_STRATEGY" : "START_TLS",
3          "NIFI_LDAP_CONNECT_TIMEOUT" : "10 secs",
4          "NIFI_LDAP_IDENTITY_STRATEGY" : "USE_DN",
'          "NIFI_LDAP_MANAGER_DN" : "",
-          "NIFI_LDAP_MANAGER_PASSWORD" : "",
0          "NIFI_LDAP_READ_TIMEOUT" : "10 secs",
4          "NIFI_LDAP_REFERRAL_STRATEGY" : "FOLLOW",
4          "NIFI_LDAP_TLS_CLIENT_AUTH" : "REQUIRED",
2          "NIFI_LDAP_TLS_KEYSTORE_PASSWORD" : "",
.          "NIFI_LDAP_TLS_KEYSTORE_PATH" : "",
4          "NIFI_LDAP_TLS_KEYSTORE_TYPE" : "PKCS12",
0          "NIFI_LDAP_TLS_PROTOCOL" : "TLSv1.2",
9          "NIFI_LDAP_TLS_SHUTDOWN_GRACEFULLY" : "false",
4          "NIFI_LDAP_TLS_TRUSTSTORE_PASSWORD" : "",
0          "NIFI_LDAP_TLS_TRUSTSTORE_PATH" : "",
6          "NIFI_LDAP_TLS_TRUSTSTORE_TYPE" : "PKCS12",
;          "NIFI_LDAP_URL" : "ldap://ldap.example.com:389",
S          "NIFI_LDAP_USER_SEARCH_BASE" : "CN&#61;Users,DC&#61;example,DC&#61;com",
E          "NIFI_LDAP_USER_SEARCH_FILTER" : "sAMAccountName&#61;{0}",
>          "NIFI_PROVENANCE_REPOSITORY_ALWAYS_SYNC" : "false",
?          "NIFI_PROVENANCE_REPOSITORY_BUFFER_SIZE" : "100000",
F          "NIFI_PROVENANCE_REPOSITORY_COMPRESS_ON_ROLLOVER" : "true",
G          "NIFI_PROVENANCE_REPOSITORY_CONCURRENT_MERGE_THREADS" : "2",
F          "NIFI_PROVENANCE_REPOSITORY_DEBUG_FREQUENCY" : "1_000_000",
T          "NIFI_PROVENANCE_REPOSITORY_DIRECTORY_DEFAULT" : "provenance-repository",
<          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY" : "",
?          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_ID" : "",
T          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_IMPLEMENTATION" : "",
N          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_LOCATION" : "",
u          "NIFI_PROVENANCE_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.provenance.PersistentProvenanceRepository",
@          "NIFI_PROVENANCE_REPOSITORY_INDEXED_ATTRIBUTES" : "",
x          "NIFI_PROVENANCE_REPOSITORY_INDEXED_FIELDS" : "EventType, FlowFileUUID, Filename, ProcessorID, Relationship",
D          "NIFI_PROVENANCE_REPOSITORY_INDEX_SHARD_SIZE" : "500 MB",
<          "NIFI_PROVENANCE_REPOSITORY_INDEX_THREADS" : "2",
=          "NIFI_PROVENANCE_REPOSITORY_JOURNAL_COUNT" : "16",
G          "NIFI_PROVENANCE_REPOSITORY_MAX_ATTRIBUTE_LENGTH" : "65536",
B          "NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_SIZE" : "1 GB",
F          "NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_TIME" : "24 hours",
<          "NIFI_PROVENANCE_REPOSITORY_QUERY_THREADS" : "2",
A          "NIFI_PROVENANCE_REPOSITORY_ROLLOVER_SIZE" : "100 MB",
B          "NIFI_PROVENANCE_REPOSITORY_ROLLOVER_TIME" : "30 secs",
B          "NIFI_PROVENANCE_REPOSITORY_WARM_CACHE_FREQUENCY" : "",
1          "NIFI_QUEUE_SWAP_THRESHOLD" : "20000",
)          "NIFI_REMOTE_INPUT_HOST" : "",
5          "NIFI_REMOTE_INPUT_HTTP_ENABLED" : "true",
@          "NIFI_REMOTE_INPUT_HTTP_TRANSACTION_TTL" : "30 secs",
0          "NIFI_REMOTE_INPUT_SECURE" : "false",
0          "NIFI_REMOTE_INPUT_SOCKET_PORT" : "",
ç          "NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_DN" : "^CN&#61;(.*?), OU&#61;(.*?), O&#61;(.*?), L&#61;(.*?), ST&#61;(.*?), C&#61;(.*?)$",
T          "NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_KERB" : "^(.*?)/instance@(.*?)$",
?          "NIFI_SECURITY_IDENTITY_MAPPING_VALUE_DN" : "$1@$2",
A          "NIFI_SECURITY_IDENTITY_MAPPING_VALUE_KERB" : "$1@$2",
*          "NIFI_SECURITY_KEYPASSWD" : "",
)          "NIFI_SECURITY_KEYSTORE" : "",
/          "NIFI_SECURITY_KEYSTOREPASSWD" : "",
-          "NIFI_SECURITY_KEYSTORETYPE" : "",
/          "NIFI_SECURITY_NEEDCLIENTAUTH" : "",
;          "NIFI_SECURITY_OCSP_RESPONDER_CERTIFICATE" : "",
3          "NIFI_SECURITY_OCSP_RESPONDER_URL" : "",
+          "NIFI_SECURITY_TRUSTSTORE" : "",
1          "NIFI_SECURITY_TRUSTSTOREPASSWD" : "",
/          "NIFI_SECURITY_TRUSTSTORETYPE" : "",
=          "NIFI_SECURITY_USER_AUTHORIZER" : "file-provider",
=          "NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER" : "",
7          "NIFI_SENSITIVE_PROPS_ADDITIONAL_KEYS" : "",
S          "NIFI_SENSITIVE_PROPS_ALGORITHM" : "PBEWITHMD5AND256BITAES-CBC-OPENSSL",
+          "NIFI_SENSITIVE_PROPS_KEY" : "",
5          "NIFI_SENSITIVE_PROPS_KEY_PROTECTED" : "",
2          "NIFI_SENSITIVE_PROPS_PROVIDER" : "BC",
V          "NIFI_STATE_MANAGEMENT_CONFIGURATION_FILE" : "./conf/state-management.xml",
a          "NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_PROPERTIES" : "./conf/zookeeper.properties",
F          "NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_START" : "false",
D          "NIFI_STATE_MANAGEMENT_PROVIDER_CLUSTER" : "zk-provider",
E          "NIFI_STATE_MANAGEMENT_PROVIDER_LOCAL" : "local-provider",
,          "NIFI_SWAP_IN_PERIOD" : "5 secs",
(          "NIFI_SWAP_IN_THREADS" : "1",
c          "NIFI_SWAP_MANAGER_IMPLEMENTATION" : "org.apache.nifi.controller.FileSystemSwapManager",
-          "NIFI_SWAP_OUT_PERIOD" : "5 secs",
)          "NIFI_SWAP_OUT_THREADS" : "4",
4          "NIFI_VARIABLE_REGISTRY_PROPERTIES" : "",
$          "NIFI_VERSION" : "1.5.0",
C          "NIFI_VOLATILE_CONTENT_REPOSITORY_BLOCK_SIZE" : "32 KB",
B          "NIFI_VOLATILE_CONTENT_REPOSITORY_MAX_SIZE" : "100 MB",
&          "NIFI_WEB_HTTPS_HOST" : "",
;          "NIFI_WEB_HTTPS_NETWORK_INTERFACE_DEFAULT" : "",
*          "NIFI_WEB_HTTPS_PORT" : "8443",
%          "NIFI_WEB_HTTP_HOST" : "",
:          "NIFI_WEB_HTTP_NETWORK_INTERFACE_DEFAULT" : "",
)          "NIFI_WEB_HTTP_PORT" : "8080",
,          "NIFI_WEB_JETTY_THREADS" : "200",
?          "NIFI_WEB_JETTY_WORKING_DIRECTORY" : "./work/jetty",
.          "NIFI_WEB_WAR_DIRECTORY" : "./lib",
A          "NIFI_ZOOKEEPER_CONNECT_STRING" : "master.mesos:2181",
7          "NIFI_ZOOKEEPER_CONNECT_TIMEOUT" : "3 secs",
0          "NIFI_ZOOKEEPER_ROOT_NODE" : "/nifi",
6          "NIFI_ZOOKEEPER_SESSION_TIMEOUT" : "3 secs"

        }
	      },
"      "health-check-spec" : null,
%      "readiness-check-spec" : null,
      "config-files" : [ ],
      "discovery-spec" : null,
      "kill-grace-period" : 0,
#      "transport-encryption" : [ ]
	    }, {
!      "name" : "cleanup-backup",
      "goal" : "ONCE",
      "essential" : true,
      "resource-set" : {
$        "id" : "sidecar-resources",
(        "resource-specifications" : [ {
+          "@type" : "DefaultResourceSpec",
          "name" : "cpus",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 0.5
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        }, {
+          "@type" : "DefaultResourceSpec",
          "name" : "mem",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 512.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        } ],
&        "volume-specifications" : [ {
)          "@type" : "DefaultVolumeSpec",
          "type" : "ROOT",
,          "container-path" : "nifi-backup",
          "name" : "disk",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 500.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
           "role" : "nifi-role",
%          "pre-reserved-role" : "*",
)          "principal" : "nifi-principal"
        } ],
        "role" : "nifi-role",
'        "principal" : "nifi-principal"
	      },
      "command-spec" : {
`        "value" : "export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/jre/) ; rm -r nifi-backup/*\n",
        "environment" : {
-          "NIFI_CLUSTER_FIREWALL_FILE" : "",
=          "NIFI_CLUSTER_FLOW_ELECTION_MAX_CANDIDATES" : "3",
A          "NIFI_CLUSTER_FLOW_ELECTION_MAX_WAIT_TIME" : "1 mins",
+          "NIFI_CLUSTER_IS_NODE" : "true",
,          "NIFI_CLUSTER_NODE_ADDRESS" : "",
=          "NIFI_CLUSTER_NODE_CONNECTION_TIMEOUT" : "5 secs",
9          "NIFI_CLUSTER_NODE_EVENT_HISTORY_SIZE" : "25",
7          "NIFI_CLUSTER_NODE_PROTOCOL_PORT" : "12000",
7          "NIFI_CLUSTER_NODE_PROTOCOL_THREADS" : "10",
7          "NIFI_CLUSTER_NODE_READ_TIMEOUT" : "5 secs",
A          "NIFI_CLUSTER_PROTOCOL_HEARTBEAT_INTERVAL" : "5 secs",
D          "NIFI_COMPONENTS_STATUS_REPOSITORY_BUFFER_SIZE" : "1440",
é          "NIFI_COMPONENTS_STATUS_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.status.history.VolatileComponentStatusRepository",
B          "NIFI_COMPONENTS_STATUS_SNAPSHOT_FREQUENCY" : "1 mins",
>          "NIFI_CONTENT_CLAIM_MAX_APPENDABLE_SIZE" : "10 MB",
7          "NIFI_CONTENT_CLAIM_MAX_FLOW_FILES" : "100",
;          "NIFI_CONTENT_REPOSITORY_ALWAYS_SYNC" : "false",
>          "NIFI_CONTENT_REPOSITORY_ARCHIVE_ENABLED" : "true",
O          "NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_RETENTION_PERIOD" : "12 hours",
J          "NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_USAGE_PERCENTAGE" : "50%",
N          "NIFI_CONTENT_REPOSITORY_DIRECTORY_DEFAULT" : "content-repository",
s          "NIFI_CONTENT_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.repository.FileSystemRepository",
?          "NIFI_CONTENT_VIEWER_URL" : "/nifi-content-viewer/",
A          "NIFI_CORE_ADMINISTRATIVE_YIELD_DURATION" : "30 secs",
P          "NIFI_CORE_AUTHORIZER_CONFIGURATION_FILE" : "./conf/authorizers.xml",
:          "NIFI_CORE_BORED_YIELD_DURATION" : "10 millis",
R          "NIFI_CORE_DOCUMENTATION_WORKING_DIRECTORY" : "./work/docs/components",
?          "NIFI_CORE_FLOWCONTROLLER_AUTORESUMESTATE" : "true",
K          "NIFI_CORE_FLOWCONTROLLER_GRACEFUL_SHUTDOWN_PERIOD" : "10 secs",
B          "NIFI_CORE_FLOWSERVICE_WRITEDELAY_INTERVAL" : "500 ms",
I          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_DIR" : "./conf/archive",
C          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_ENABLED" : "true",
A          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_COUNT" : "",
I          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_STORAGE" : "500 MB",
G          "NIFI_CORE_FLOW_CONFIGURATION_ARCHIVE_MAX_TIME" : "30 days",
D          "NIFI_CORE_FLOW_CONFIGURATION_FILE" : "conf/flow.xml.gz",
j          "NIFI_CORE_LOGIN_IDENTITY_PROVIDER_CONFIGURATION_FILE" : "./conf/login-identity-providers.xml",
7          "NIFI_CORE_NAR_LIBRARY_DIRECTORY" : "./lib",
<          "NIFI_CORE_NAR_WORKING_DIRECTORY" : "./work/nar",
?          "NIFI_CORE_PROCESSOR_SCHEDULING_TIMEOUT" : "1 mins",
@          "NIFI_CORE_TEMPLATES_DIRECTORY" : "./conf/templates",
;          "NIFI_CORE_UI_AUTOREFRESH_INTERVAL" : "30 secs",
+          "NIFI_CORE_UI_BANNER_TEXT" : "",
=          "NIFI_DATABASE_DIRECTORY" : "database-repository",
<          "NIFI_FLOWFILE_REPOSITORY_ALWAYS_SYNC" : "false",
E          "NIFI_FLOWFILE_REPOSITORY_CHECKPOINT_INTERVAL" : "2 mins",
H          "NIFI_FLOWFILE_REPOSITORY_DIRECTORY" : "flowfile-repository",
|          "NIFI_FLOWFILE_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.controller.repository.WriteAheadFlowFileRepository",
9          "NIFI_FLOWFILE_REPOSITORY_PARTITIONS" : "256",
d          "NIFI_H2_URL_APPEND" : ";LOCK_TIMEOUT&#61;25000;WRITE_DELAY&#61;0;AUTO_SERVER&#61;FALSE",
B          "NIFI_KERBEROS_AUTHENTICATION_EXPIRATION" : "12 hours",
=          "NIFI_KERBEROS_DEFAULT_REALM" : "NIFI.APACHE.ORG",
*          "NIFI_KERBEROS_KRB5_FILE" : "",
8          "NIFI_KERBEROS_SERVICE_KEYTAB_LOCATION" : "",
W          "NIFI_KERBEROS_SERVICE_PRINCIPAL" : "nifi/nifi.example.com@NIFI.APACHE.ORG",
I          "NIFI_KERBEROS_SPNEGO_AUTHENTICATION_EXPIRATION" : "12 hours",
7          "NIFI_KERBEROS_SPNEGO_KEYTAB_LOCATION" : "",
V          "NIFI_KERBEROS_SPNEGO_PRINCIPAL" : "HTTP/nifi.example.com@NIFI.APACHE.ORG",
>          "NIFI_LDAP_AUTHENTICATION_EXPIRATION" : "12 hours",
=          "NIFI_LDAP_AUTHENTICATION_STRATEGY" : "START_TLS",
3          "NIFI_LDAP_CONNECT_TIMEOUT" : "10 secs",
4          "NIFI_LDAP_IDENTITY_STRATEGY" : "USE_DN",
'          "NIFI_LDAP_MANAGER_DN" : "",
-          "NIFI_LDAP_MANAGER_PASSWORD" : "",
0          "NIFI_LDAP_READ_TIMEOUT" : "10 secs",
4          "NIFI_LDAP_REFERRAL_STRATEGY" : "FOLLOW",
4          "NIFI_LDAP_TLS_CLIENT_AUTH" : "REQUIRED",
2          "NIFI_LDAP_TLS_KEYSTORE_PASSWORD" : "",
.          "NIFI_LDAP_TLS_KEYSTORE_PATH" : "",
4          "NIFI_LDAP_TLS_KEYSTORE_TYPE" : "PKCS12",
0          "NIFI_LDAP_TLS_PROTOCOL" : "TLSv1.2",
9          "NIFI_LDAP_TLS_SHUTDOWN_GRACEFULLY" : "false",
4          "NIFI_LDAP_TLS_TRUSTSTORE_PASSWORD" : "",
0          "NIFI_LDAP_TLS_TRUSTSTORE_PATH" : "",
6          "NIFI_LDAP_TLS_TRUSTSTORE_TYPE" : "PKCS12",
;          "NIFI_LDAP_URL" : "ldap://ldap.example.com:389",
S          "NIFI_LDAP_USER_SEARCH_BASE" : "CN&#61;Users,DC&#61;example,DC&#61;com",
E          "NIFI_LDAP_USER_SEARCH_FILTER" : "sAMAccountName&#61;{0}",
>          "NIFI_PROVENANCE_REPOSITORY_ALWAYS_SYNC" : "false",
?          "NIFI_PROVENANCE_REPOSITORY_BUFFER_SIZE" : "100000",
F          "NIFI_PROVENANCE_REPOSITORY_COMPRESS_ON_ROLLOVER" : "true",
G          "NIFI_PROVENANCE_REPOSITORY_CONCURRENT_MERGE_THREADS" : "2",
F          "NIFI_PROVENANCE_REPOSITORY_DEBUG_FREQUENCY" : "1_000_000",
T          "NIFI_PROVENANCE_REPOSITORY_DIRECTORY_DEFAULT" : "provenance-repository",
<          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY" : "",
?          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_ID" : "",
T          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_IMPLEMENTATION" : "",
N          "NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_LOCATION" : "",
u          "NIFI_PROVENANCE_REPOSITORY_IMPLEMENTATION" : "org.apache.nifi.provenance.PersistentProvenanceRepository",
@          "NIFI_PROVENANCE_REPOSITORY_INDEXED_ATTRIBUTES" : "",
x          "NIFI_PROVENANCE_REPOSITORY_INDEXED_FIELDS" : "EventType, FlowFileUUID, Filename, ProcessorID, Relationship",
D          "NIFI_PROVENANCE_REPOSITORY_INDEX_SHARD_SIZE" : "500 MB",
<          "NIFI_PROVENANCE_REPOSITORY_INDEX_THREADS" : "2",
=          "NIFI_PROVENANCE_REPOSITORY_JOURNAL_COUNT" : "16",
G          "NIFI_PROVENANCE_REPOSITORY_MAX_ATTRIBUTE_LENGTH" : "65536",
B          "NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_SIZE" : "1 GB",
F          "NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_TIME" : "24 hours",
<          "NIFI_PROVENANCE_REPOSITORY_QUERY_THREADS" : "2",
A          "NIFI_PROVENANCE_REPOSITORY_ROLLOVER_SIZE" : "100 MB",
B          "NIFI_PROVENANCE_REPOSITORY_ROLLOVER_TIME" : "30 secs",
B          "NIFI_PROVENANCE_REPOSITORY_WARM_CACHE_FREQUENCY" : "",
1          "NIFI_QUEUE_SWAP_THRESHOLD" : "20000",
)          "NIFI_REMOTE_INPUT_HOST" : "",
5          "NIFI_REMOTE_INPUT_HTTP_ENABLED" : "true",
@          "NIFI_REMOTE_INPUT_HTTP_TRANSACTION_TTL" : "30 secs",
0          "NIFI_REMOTE_INPUT_SECURE" : "false",
0          "NIFI_REMOTE_INPUT_SOCKET_PORT" : "",
ç          "NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_DN" : "^CN&#61;(.*?), OU&#61;(.*?), O&#61;(.*?), L&#61;(.*?), ST&#61;(.*?), C&#61;(.*?)$",
T          "NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_KERB" : "^(.*?)/instance@(.*?)$",
?          "NIFI_SECURITY_IDENTITY_MAPPING_VALUE_DN" : "$1@$2",
A          "NIFI_SECURITY_IDENTITY_MAPPING_VALUE_KERB" : "$1@$2",
*          "NIFI_SECURITY_KEYPASSWD" : "",
)          "NIFI_SECURITY_KEYSTORE" : "",
/          "NIFI_SECURITY_KEYSTOREPASSWD" : "",
-          "NIFI_SECURITY_KEYSTORETYPE" : "",
/          "NIFI_SECURITY_NEEDCLIENTAUTH" : "",
;          "NIFI_SECURITY_OCSP_RESPONDER_CERTIFICATE" : "",
3          "NIFI_SECURITY_OCSP_RESPONDER_URL" : "",
+          "NIFI_SECURITY_TRUSTSTORE" : "",
1          "NIFI_SECURITY_TRUSTSTOREPASSWD" : "",
/          "NIFI_SECURITY_TRUSTSTORETYPE" : "",
=          "NIFI_SECURITY_USER_AUTHORIZER" : "file-provider",
=          "NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER" : "",
7          "NIFI_SENSITIVE_PROPS_ADDITIONAL_KEYS" : "",
S          "NIFI_SENSITIVE_PROPS_ALGORITHM" : "PBEWITHMD5AND256BITAES-CBC-OPENSSL",
+          "NIFI_SENSITIVE_PROPS_KEY" : "",
5          "NIFI_SENSITIVE_PROPS_KEY_PROTECTED" : "",
2          "NIFI_SENSITIVE_PROPS_PROVIDER" : "BC",
V          "NIFI_STATE_MANAGEMENT_CONFIGURATION_FILE" : "./conf/state-management.xml",
a          "NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_PROPERTIES" : "./conf/zookeeper.properties",
F          "NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_START" : "false",
D          "NIFI_STATE_MANAGEMENT_PROVIDER_CLUSTER" : "zk-provider",
E          "NIFI_STATE_MANAGEMENT_PROVIDER_LOCAL" : "local-provider",
,          "NIFI_SWAP_IN_PERIOD" : "5 secs",
(          "NIFI_SWAP_IN_THREADS" : "1",
c          "NIFI_SWAP_MANAGER_IMPLEMENTATION" : "org.apache.nifi.controller.FileSystemSwapManager",
-          "NIFI_SWAP_OUT_PERIOD" : "5 secs",
)          "NIFI_SWAP_OUT_THREADS" : "4",
4          "NIFI_VARIABLE_REGISTRY_PROPERTIES" : "",
$          "NIFI_VERSION" : "1.5.0",
C          "NIFI_VOLATILE_CONTENT_REPOSITORY_BLOCK_SIZE" : "32 KB",
B          "NIFI_VOLATILE_CONTENT_REPOSITORY_MAX_SIZE" : "100 MB",
&          "NIFI_WEB_HTTPS_HOST" : "",
;          "NIFI_WEB_HTTPS_NETWORK_INTERFACE_DEFAULT" : "",
*          "NIFI_WEB_HTTPS_PORT" : "8443",
%          "NIFI_WEB_HTTP_HOST" : "",
:          "NIFI_WEB_HTTP_NETWORK_INTERFACE_DEFAULT" : "",
)          "NIFI_WEB_HTTP_PORT" : "8080",
,          "NIFI_WEB_JETTY_THREADS" : "200",
?          "NIFI_WEB_JETTY_WORKING_DIRECTORY" : "./work/jetty",
.          "NIFI_WEB_WAR_DIRECTORY" : "./lib",
A          "NIFI_ZOOKEEPER_CONNECT_STRING" : "master.mesos:2181",
7          "NIFI_ZOOKEEPER_CONNECT_TIMEOUT" : "3 secs",
0          "NIFI_ZOOKEEPER_ROOT_NODE" : "/nifi",
6          "NIFI_ZOOKEEPER_SESSION_TIMEOUT" : "3 secs"

        }
	      },
"      "health-check-spec" : null,
%      "readiness-check-spec" : null,
      "config-files" : [ ],
      "discovery-spec" : null,
      "kill-grace-period" : 0,
#      "transport-encryption" : [ ]
	    } ],
    "placement-rule" : {
      "@type" : "AndRule",
      "rules" : [ {
&        "@type" : "IsLocalRegionRule"
      }, {
(        "@type" : "MaxPerHostnameRule",
        "max" : 1,
        "task-filter" : {
$          "@type" : "RegexMatcher",
           "pattern" : "nifi-.*"

        }

      } ]
    },
    "volumes" : [ ],
    "pre-reserved-role" : "*",
    "secrets" : [ ],
#    "share-pid-namespace" : false,
!    "allow-decommission" : false
  } ],
'  "replacement-failure-policy" : null,
  "user" : "nobody"
}
øINFO  2018-03-26 10:47:49,595 [Test worker] com.mesosphere.sdk.config.DefaultConfigurationUpdater:updateConfiguration(88): Skipping config diff: There is no old config target to diff against
äINFO  2018-03-26 10:47:49,634 [Test worker] com.mesosphere.sdk.config.DefaultConfigurationUpdater:updateConfiguration(126): Updating target configuration: Prior target configuration 'null' is different from new configuration '195fd4dc-085c-46da-a430-c3337d3436c5'. 
ÃINFO  2018-03-26 10:47:49,637 [Test worker] com.mesosphere.sdk.config.DefaultConfigurationUpdater:cleanupDuplicateAndUnusedConfigs(230): Testing deserialization of 1 listed configurations before cleanup:
¥INFO  2018-03-26 10:47:49,637 [Test worker] com.mesosphere.sdk.config.DefaultConfigurationUpdater:cleanupDuplicateAndUnusedConfigs(234): - 195fd4dc-085c-46da-a430-c3337d3436c5: OK
üINFO  2018-03-26 10:47:49,638 [Test worker] com.mesosphere.sdk.config.DefaultConfigurationUpdater:clearConfigsNotListed(363): Cleaning up 0 unused configs: []
¢INFO  2018-03-26 10:47:49,664 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-0, with tasks: [node]
µWARN  2018-03-26 10:47:49,680 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-0-node at: Tasks/nifi-0-node/TaskInfo
∏INFO  2018-03-26 10:47:49,701 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[node]: changed status from: PENDING to: PENDING (interrupted=false)
∏INFO  2018-03-26 10:47:49,705 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[node]: changed status from: PENDING to: PENDING (interrupted=false)
•INFO  2018-03-26 10:47:49,705 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-0, with tasks: [metrics]
ªWARN  2018-03-26 10:47:49,706 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-0-metrics at: Tasks/nifi-0-metrics/TaskInfo
ªINFO  2018-03-26 10:47:49,707 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
ªINFO  2018-03-26 10:47:49,707 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
¢INFO  2018-03-26 10:47:49,708 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-1, with tasks: [node]
µWARN  2018-03-26 10:47:49,709 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-1-node at: Tasks/nifi-1-node/TaskInfo
∏INFO  2018-03-26 10:47:49,717 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[node]: changed status from: PENDING to: PENDING (interrupted=false)
∏INFO  2018-03-26 10:47:49,718 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[node]: changed status from: PENDING to: PENDING (interrupted=false)
•INFO  2018-03-26 10:47:49,718 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-1, with tasks: [metrics]
ªWARN  2018-03-26 10:47:49,721 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-1-metrics at: Tasks/nifi-1-metrics/TaskInfo
ªINFO  2018-03-26 10:47:49,721 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
ªINFO  2018-03-26 10:47:49,722 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
≠INFO  2018-03-26 10:47:49,730 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-0, with tasks: [restart-cleanup]
ÀWARN  2018-03-26 10:47:49,733 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-0-restart-cleanup at: Tasks/nifi-0-restart-cleanup/TaskInfo
√INFO  2018-03-26 10:47:49,733 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[restart-cleanup]: changed status from: PENDING to: PENDING (interrupted=false)
√INFO  2018-03-26 10:47:49,734 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[restart-cleanup]: changed status from: PENDING to: PENDING (interrupted=false)
≠INFO  2018-03-26 10:47:49,734 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-1, with tasks: [restart-cleanup]
ÀWARN  2018-03-26 10:47:49,737 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-1-restart-cleanup at: Tasks/nifi-1-restart-cleanup/TaskInfo
√INFO  2018-03-26 10:47:49,737 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[restart-cleanup]: changed status from: PENDING to: PENDING (interrupted=false)
√INFO  2018-03-26 10:47:49,738 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[restart-cleanup]: changed status from: PENDING to: PENDING (interrupted=false)
§INFO  2018-03-26 10:47:49,739 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-0, with tasks: [backup]
πWARN  2018-03-26 10:47:49,746 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-0-backup at: Tasks/nifi-0-backup/TaskInfo
∫INFO  2018-03-26 10:47:49,747 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[backup]: changed status from: PENDING to: PENDING (interrupted=false)
∫INFO  2018-03-26 10:47:49,747 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[backup]: changed status from: PENDING to: PENDING (interrupted=false)
§INFO  2018-03-26 10:47:49,748 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-1, with tasks: [backup]
πWARN  2018-03-26 10:47:49,749 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-1-backup at: Tasks/nifi-1-backup/TaskInfo
∫INFO  2018-03-26 10:47:49,749 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[backup]: changed status from: PENDING to: PENDING (interrupted=false)
∫INFO  2018-03-26 10:47:49,753 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[backup]: changed status from: PENDING to: PENDING (interrupted=false)
ßINFO  2018-03-26 10:47:49,754 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-0, with tasks: [upload-s3]
øWARN  2018-03-26 10:47:49,757 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-0-upload-s3 at: Tasks/nifi-0-upload-s3/TaskInfo
ΩINFO  2018-03-26 10:47:49,757 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[upload-s3]: changed status from: PENDING to: PENDING (interrupted=false)
ΩINFO  2018-03-26 10:47:49,758 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[upload-s3]: changed status from: PENDING to: PENDING (interrupted=false)
ßINFO  2018-03-26 10:47:49,758 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-1, with tasks: [upload-s3]
øWARN  2018-03-26 10:47:49,759 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-1-upload-s3 at: Tasks/nifi-1-upload-s3/TaskInfo
ΩINFO  2018-03-26 10:47:49,759 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[upload-s3]: changed status from: PENDING to: PENDING (interrupted=false)
ΩINFO  2018-03-26 10:47:49,759 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[upload-s3]: changed status from: PENDING to: PENDING (interrupted=false)
¨INFO  2018-03-26 10:47:49,760 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-0, with tasks: [cleanup-backup]
…WARN  2018-03-26 10:47:49,761 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-0-cleanup-backup at: Tasks/nifi-0-cleanup-backup/TaskInfo
¬INFO  2018-03-26 10:47:49,767 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[cleanup-backup]: changed status from: PENDING to: PENDING (interrupted=false)
¬INFO  2018-03-26 10:47:49,768 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[cleanup-backup]: changed status from: PENDING to: PENDING (interrupted=false)
¨INFO  2018-03-26 10:47:49,768 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-1, with tasks: [cleanup-backup]
…WARN  2018-03-26 10:47:49,769 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-1-cleanup-backup at: Tasks/nifi-1-cleanup-backup/TaskInfo
¬INFO  2018-03-26 10:47:49,769 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[cleanup-backup]: changed status from: PENDING to: PENDING (interrupted=false)
¬INFO  2018-03-26 10:47:49,769 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[cleanup-backup]: changed status from: PENDING to: PENDING (interrupted=false)
¢INFO  2018-03-26 10:47:49,774 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-0, with tasks: [node]
µWARN  2018-03-26 10:47:49,776 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-0-node at: Tasks/nifi-0-node/TaskInfo
∏INFO  2018-03-26 10:47:49,776 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[node]: changed status from: PENDING to: PENDING (interrupted=false)
∏INFO  2018-03-26 10:47:49,776 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[node]: changed status from: PENDING to: PENDING (interrupted=false)
•INFO  2018-03-26 10:47:49,777 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-0, with tasks: [metrics]
ªWARN  2018-03-26 10:47:49,778 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-0-metrics at: Tasks/nifi-0-metrics/TaskInfo
ªINFO  2018-03-26 10:47:49,778 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
ªINFO  2018-03-26 10:47:49,778 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-0:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
¢INFO  2018-03-26 10:47:49,779 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-1, with tasks: [node]
µWARN  2018-03-26 10:47:49,782 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-1-node at: Tasks/nifi-1-node/TaskInfo
∏INFO  2018-03-26 10:47:49,784 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[node]: changed status from: PENDING to: PENDING (interrupted=false)
∏INFO  2018-03-26 10:47:49,784 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[node]: changed status from: PENDING to: PENDING (interrupted=false)
•INFO  2018-03-26 10:47:49,784 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(42): Generating step for pod: nifi-1, with tasks: [metrics]
ªWARN  2018-03-26 10:47:49,787 [Test worker] com.mesosphere.sdk.state.StateStore:fetchTask(294): No TaskInfo found for the requested name: nifi-1-metrics at: Tasks/nifi-1-metrics/TaskInfo
ªINFO  2018-03-26 10:47:49,790 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
ªINFO  2018-03-26 10:47:49,790 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(65): nifi-1:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
òINFO  2018-03-26 10:47:49,791 [Test worker] com.mesosphere.sdk.scheduler.SchedulerBuilder:getPlans(385): Got 3 YAML plans: [replace, backup-s3, deploy]
—INFO  2018-03-26 10:47:49,791 [Test worker] com.mesosphere.sdk.scheduler.SchedulerBuilder:selectDeployPlan(434): Using regular deploy plan. (Has completed deployment: false, Custom update plan defined: false)
